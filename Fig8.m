
clear all;
close all;
addpath('additional_files')

 
 fail=0;
rho=0.05;
 DzT=1;
 DxT=1000;

 G1T=DzT;
G0T=DxT;
% %  
 
 
 
 

g1P =    1;
g1T2 = 1;    
g1T=1;
g0P=0.0;
g0T=0.0;
g0T2=0.0;

P123=[];
P132=[];
P213=[];
P231=[];
P312=[];
P321=[];

q123=[];
q132=[];
q213=[];
q231=[];
q312=[];
q321=[];
 

a0P321=[];g0P321=[];a0T321=[];g0T321=[];a0T2321=[];g0T2321=[];
a0P123=[];g0P123=[];a0T123=[];g0T123=[];a0T2123=[];g0T2123=[];
a0P132=[];g0P132=[];a0T132=[];g0T132=[];a0T2132=[];g0T2132=[];
a0P213=[];g0P213=[];a0T213=[];g0T213=[];a0T2213=[];g0T2213=[];
a0P231=[];g0P231=[];a0T231=[];g0T231=[];a0T2231=[];g0T2231=[];
a0P312=[];g0P312=[];a0T312=[];g0T312=[];a0T2312=[];g0T2312=[];
EE123=[];EE312=[];EE231=[];EE213=[];EE132=[];EE321=[];


MM=6; % number of parameters
v=logspace(-2,3,16 );
 v=sort(v);
Ptotal=1000;
Ktotal=500;
K2total=100;


 
L=length(v); %number of discrete levels
EE=zeros(L^MM,3);
 

a1_=1;
a2_=1;
a3_=1;
b1_=1;
b2_=1;
b3_=1;
g1_=1;
g2_=1;
g3_=1;
g4_=1;
g5_=1;
g6_=1;

tic
parfor l=0:L^MM-1;
    
ql=flip(dec2base(l,L,MM)-48);
ql(find(ql>16))=ql(find(ql>16))-7;

in(l+1,:)=ql;
    a0P =  sum(v.*(ql(1)==[0:L-1]));  
a0T =   sum(v.*(ql(2)==[0:L-1]));;  
a0T2 =    sum(v.*(ql(3)==[0:L-1]));;  
 a1P = sum(v.*(ql(4)==[0:L-1])) ;
 
   a1T =  sum(v.*(ql(5)==[0:L-1]));; 
 a1T2 =  sum(v.*(ql(6)==[0:L-1]));




 

 
  
nPRC=[1,0,1];
nKMT=[1,1,0];
EEv=zeros(1,3);
   for i=1:3
 
              c1T=(1+g1T)*a1T; c1P=(1+g1P)*a1P;     c0T=(1+g0T)*a0T; c0P=(1+g0P)*a1P; 

g1=g1P;
g2=g1T;
g3=g0P;
g4=g0T;
g5=g1T2;
g6=g0T2;

a1=a1P*(g1P+1);
a2=a1T*(g1T+1);
a3=a1T2*(g1T2+1);
b1=a0P*(g0P+1);
b2=a0T*(g0T+1);
b3=a0T2*(g0T2+1);


PT=Ptotal*nPRC(i);
KT=Ktotal*nKMT(i);
K2T=K2total;

 
 
  
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
success=1;
%formulae are generated using generate_promoter_state_formulae.m
Dz1=@(P,K,K2) (DzT*K*a2*a1_*a3_*g2*g1_*g5_ + DzT*K*a2*a3_*g1*g2*g1_*g5_ + DzT*K*a2*a1_*g2*g5*g1_*g5_ + DzT*K*a2*g1*g2*g5*g1_*g5_)/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_);
Dz2=@(P,K,K2) (K2*a3*g5*(DzT*a1_*a2_*g1_*g2_ + DzT*a1_*g2*g1_*g2_ + DzT*a2_*g1*g1_*g2_ + DzT*g1*g2*g1_*g2_))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_);
Czk=@(P,K,K2) (DzT*K*a2*a1_*a3_*g1_*g2_*g5_ + DzT*K*a2*a3_*g1*g1_*g2_*g5_ + DzT*K*a2*a1_*g5*g1_*g2_*g5_ + DzT*K*a2*g1*g5*g1_*g2_*g5_)/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_);

Czk2=@(P,K,K2) (K2*a3*g5_*(DzT*a1_*a2_*g1_*g2_ + DzT*a1_*g2*g1_*g2_ + DzT*a2_*g1*g1_*g2_ + DzT*g1*g2*g1_*g2_))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_);

Dz=@(P,K,K2)(DzT*a1_*a3_*g2*g1_*g2_*g5_ + DzT*a2_*a3_*g1*g1_*g2_*g5_ + DzT*a1_*a2_*g5*g1_*g2_*g5_ + DzT*a3_*g1*g2*g1_*g2_*g5_ + DzT*a1_*g2*g5*g1_*g2_*g5_ + DzT*a2_*g1*g5*g1_*g2_*g5_ + DzT*g1*g2*g5*g1_*g2_*g5_ + DzT*a1_*a2_*a3_*g1_*g2_*g5_)/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_);

Dz_=@(P,K,K2)(g1*(DzT*P*a1*a2_*a3_*g2_*g5_ + DzT*P*a1*a3_*g2*g2_*g5_ + DzT*P*a1*a2_*g5*g2_*g5_ + DzT*P*a1*g2*g5*g2_*g5_))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_);

Czp=@(P,K,K2)(DzT*P*a1*g1_*g2_*g5_*(a2_ + g2)*(a3_ + g5))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_);




Dx1=@(P,K,K2) -(K*a1_*a2_*a3_*g4*g1_*g2_*g5_ - KT*a1_*a2_*a3_*g4*g1_*g2_*g5_ + K*a1_*a3_*g2*g4*g1_*g2_*g5_ + K*a2_*a3_*g1*g4*g1_*g2_*g5_ + K*a1_*a2_*g4*g5*g1_*g2_*g5_ - KT*a1_*a3_*g2*g4*g1_*g2_*g5_ - KT*a2_*a3_*g1*g4*g1_*g2_*g5_ - KT*a1_*a2_*g4*g5*g1_*g2_*g5_ + K*a3_*g1*g2*g4*g1_*g2_*g5_ + K*a1_*g2*g4*g5*g1_*g2_*g5_ + K*a2_*g1*g4*g5*g1_*g2_*g5_ - KT*a3_*g1*g2*g4*g1_*g2_*g5_ - KT*a1_*g2*g4*g5*g1_*g2_*g5_ - KT*a2_*g1*g4*g5*g1_*g2_*g5_ + K*g1*g2*g4*g5*g1_*g2_*g5_ - KT*g1*g2*g4*g5*g1_*g2_*g5_ + K^2*a2*a1_*a3_*g2*g4*g1_*g5_ + K^2*a2*a1_*a3_*g4*g1_*g2_*g5_ + K^2*a2*a3_*g1*g2*g4*g1_*g5_ + K^2*a2*a1_*g2*g4*g5*g1_*g5_ + K^2*a2*a3_*g1*g4*g1_*g2_*g5_ + K^2*a2*a1_*g4*g5*g1_*g2_*g5_ + K^2*a2*g1*g2*g4*g5*g1_*g5_ + K^2*a2*g1*g4*g5*g1_*g2_*g5_ + DzT*K*a2*a1_*a3_*g4*g1_*g2_*g5_ + DzT*K*a2*a3_*g1*g4*g1_*g2_*g5_ + DzT*K*a2*a1_*g4*g5*g1_*g2_*g5_ + K*K2*a3*a1_*a2_*g4*g5*g1_*g2_ + K*K2*a3*a1_*a2_*g4*g1_*g2_*g5_ - K*KT*a2*a1_*a3_*g2*g4*g1_*g5_ - K2*KT*a3*a1_*a2_*g4*g5*g1_*g2_ - K*KT*a2*a1_*a3_*g4*g1_*g2_*g5_ - K2*KT*a3*a1_*a2_*g4*g1_*g2_*g5_ + K*P*a1*a2_*a3_*g1*g4*g2_*g5_ + K*P*a1*a2_*a3_*g4*g1_*g2_*g5_ - KT*P*a1*a2_*a3_*g1*g4*g2_*g5_ - KT*P*a1*a2_*a3_*g4*g1_*g2_*g5_ + DzT*K*a2*g1*g4*g5*g1_*g2_*g5_ + K*K2*a3*a1_*g2*g4*g5*g1_*g2_ + K*K2*a3*a2_*g1*g4*g5*g1_*g2_ + K*K2*a3*a1_*g2*g4*g1_*g2_*g5_ + K*K2*a3*a2_*g1*g4*g1_*g2_*g5_ - K*KT*a2*a3_*g1*g2*g4*g1_*g5_ - K*KT*a2*a1_*g2*g4*g5*g1_*g5_ - K2*KT*a3*a1_*g2*g4*g5*g1_*g2_ - K2*KT*a3*a2_*g1*g4*g5*g1_*g2_ - K*KT*a2*a3_*g1*g4*g1_*g2_*g5_ - K*KT*a2*a1_*g4*g5*g1_*g2_*g5_ - K2*KT*a3*a1_*g2*g4*g1_*g2_*g5_ - K2*KT*a3*a2_*g1*g4*g1_*g2_*g5_ + K*P*a1*a3_*g1*g2*g4*g2_*g5_ + K*P*a1*a2_*g1*g4*g5*g2_*g5_ + K*P*a1*a3_*g2*g4*g1_*g2_*g5_ + K*P*a1*a2_*g4*g5*g1_*g2_*g5_ - KT*P*a1*a3_*g1*g2*g4*g2_*g5_ - KT*P*a1*a2_*g1*g4*g5*g2_*g5_ - KT*P*a1*a3_*g2*g4*g1_*g2_*g5_ - KT*P*a1*a2_*g4*g5*g1_*g2_*g5_ + K*K2*a3*g1*g2*g4*g5*g1_*g2_ + K*K2*a3*g1*g2*g4*g1_*g2_*g5_ - K*KT*a2*g1*g2*g4*g5*g1_*g5_ - K2*KT*a3*g1*g2*g4*g5*g1_*g2_ - K*KT*a2*g1*g4*g5*g1_*g2_*g5_ - K2*KT*a3*g1*g2*g4*g1_*g2_*g5_ + K*P*a1*g1*g2*g4*g5*g2_*g5_ + K*P*a1*g2*g4*g5*g1_*g2_*g5_ - KT*P*a1*g1*g2*g4*g5*g2_*g5_ - KT*P*a1*g2*g4*g5*g1_*g2_*g5_)/(g4_*(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_));





Dx2=@(P,K,K2) -(g6*(K2*a1_*a2_*a3_*g1_*g2_*g5_ - K2T*a1_*a2_*a3_*g1_*g2_*g5_ + K2*a1_*a3_*g2*g1_*g2_*g5_ + K2*a2_*a3_*g1*g1_*g2_*g5_ + K2*a1_*a2_*g5*g1_*g2_*g5_ - K2T*a1_*a3_*g2*g1_*g2_*g5_ - K2T*a2_*a3_*g1*g1_*g2_*g5_ - K2T*a1_*a2_*g5*g1_*g2_*g5_ + K2*a3_*g1*g2*g1_*g2_*g5_ + K2*a1_*g2*g5*g1_*g2_*g5_ + K2*a2_*g1*g5*g1_*g2_*g5_ - K2T*a3_*g1*g2*g1_*g2_*g5_ - K2T*a1_*g2*g5*g1_*g2_*g5_ - K2T*a2_*g1*g5*g1_*g2_*g5_ + K2*g1*g2*g5*g1_*g2_*g5_ - K2T*g1*g2*g5*g1_*g2_*g5_ + K2^2*a3*a1_*a2_*g5*g1_*g2_ + K2^2*a3*a1_*a2_*g1_*g2_*g5_ + K2^2*a3*a1_*g2*g5*g1_*g2_ + K2^2*a3*a2_*g1*g5*g1_*g2_ + K2^2*a3*a1_*g2*g1_*g2_*g5_ + K2^2*a3*a2_*g1*g1_*g2_*g5_ + K2^2*a3*g1*g2*g5*g1_*g2_ + K2^2*a3*g1*g2*g1_*g2_*g5_ + DzT*K2*a3*a1_*a2_*g1_*g2_*g5_ + DzT*K2*a3*a1_*g2*g1_*g2_*g5_ + DzT*K2*a3*a2_*g1*g1_*g2_*g5_ + K*K2*a2*a1_*a3_*g2*g1_*g5_ - K*K2T*a2*a1_*a3_*g2*g1_*g5_ - K2*K2T*a3*a1_*a2_*g5*g1_*g2_ + K*K2*a2*a1_*a3_*g1_*g2_*g5_ - K*K2T*a2*a1_*a3_*g1_*g2_*g5_ - K2*K2T*a3*a1_*a2_*g1_*g2_*g5_ + K2*P*a1*a2_*a3_*g1*g2_*g5_ - K2T*P*a1*a2_*a3_*g1*g2_*g5_ + K2*P*a1*a2_*a3_*g1_*g2_*g5_ - K2T*P*a1*a2_*a3_*g1_*g2_*g5_ + DzT*K2*a3*g1*g2*g1_*g2_*g5_ + K*K2*a2*a3_*g1*g2*g1_*g5_ + K*K2*a2*a1_*g2*g5*g1_*g5_ - K*K2T*a2*a3_*g1*g2*g1_*g5_ - K*K2T*a2*a1_*g2*g5*g1_*g5_ - K2*K2T*a3*a1_*g2*g5*g1_*g2_ - K2*K2T*a3*a2_*g1*g5*g1_*g2_ + K*K2*a2*a3_*g1*g1_*g2_*g5_ + K*K2*a2*a1_*g5*g1_*g2_*g5_ - K*K2T*a2*a3_*g1*g1_*g2_*g5_ - K*K2T*a2*a1_*g5*g1_*g2_*g5_ - K2*K2T*a3*a1_*g2*g1_*g2_*g5_ - K2*K2T*a3*a2_*g1*g1_*g2_*g5_ + K2*P*a1*a3_*g1*g2*g2_*g5_ + K2*P*a1*a2_*g1*g5*g2_*g5_ - K2T*P*a1*a3_*g1*g2*g2_*g5_ - K2T*P*a1*a2_*g1*g5*g2_*g5_ + K2*P*a1*a3_*g2*g1_*g2_*g5_ + K2*P*a1*a2_*g5*g1_*g2_*g5_ - K2T*P*a1*a3_*g2*g1_*g2_*g5_ - K2T*P*a1*a2_*g5*g1_*g2_*g5_ + K*K2*a2*g1*g2*g5*g1_*g5_ - K*K2T*a2*g1*g2*g5*g1_*g5_ - K2*K2T*a3*g1*g2*g5*g1_*g2_ + K*K2*a2*g1*g5*g1_*g2_*g5_ - K*K2T*a2*g1*g5*g1_*g2_*g5_ - K2*K2T*a3*g1*g2*g1_*g2_*g5_ + K2*P*a1*g1*g2*g5*g2_*g5_ - K2T*P*a1*g1*g2*g5*g2_*g5_ + K2*P*a1*g2*g5*g1_*g2_*g5_ - K2T*P*a1*g2*g5*g1_*g2_*g5_))/(g6_*(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_));


Cxk=@(P,K,K2) KT - K - (DzT*K*a2*g1_*g2_*g5_*(a1_ + g1)*(a3_ + g5))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_);



Cxk2=@  (P,K,K2) K2T - K2 - (DzT*K2*a3*g1_*g2_*g5_*(a1_ + g1)*(a2_ + g2))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_);



Dx=@(P,K,K2) (DxT*a1_*a2_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ + DxT*a1_*a3_*g2*g1_*g2_*g3_*g4_*g5_*g6_ + DxT*a2_*a3_*g1*g1_*g2_*g3_*g4_*g5_*g6_ + DxT*a1_*a2_*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K*a1_*a2_*a3_*g4*g1_*g2_*g3_*g5_*g6_ + K2*a1_*a2_*a3_*g6*g1_*g2_*g3_*g4_*g5_ - K2T*a1_*a2_*a3_*g6*g1_*g2_*g3_*g4_*g5_ + K*a1_*a2_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ + K2*a1_*a2_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ - K2T*a1_*a2_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ - KT*a1_*a2_*a3_*g4*g1_*g2_*g3_*g5_*g6_ - KT*a1_*a2_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ + P*a1_*a2_*a3_*g3*g1_*g2_*g4_*g5_*g6_ + P*a1_*a2_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ - PT*a1_*a2_*a3_*g3*g1_*g2_*g4_*g5_*g6_ - PT*a1_*a2_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ + DxT*a3_*g1*g2*g1_*g2_*g3_*g4_*g5_*g6_ + DxT*a1_*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ + DxT*a2_*g1*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K*a1_*a3_*g2*g4*g1_*g2_*g3_*g5_*g6_ + K*a2_*a3_*g1*g4*g1_*g2_*g3_*g5_*g6_ + K*a1_*a2_*g4*g5*g1_*g2_*g3_*g5_*g6_ + K2*a1_*a3_*g2*g6*g1_*g2_*g3_*g4_*g5_ + K2*a2_*a3_*g1*g6*g1_*g2_*g3_*g4_*g5_ + K2*a1_*a2_*g5*g6*g1_*g2_*g3_*g4_*g5_ - K2T*a1_*a3_*g2*g6*g1_*g2_*g3_*g4_*g5_ - K2T*a2_*a3_*g1*g6*g1_*g2_*g3_*g4_*g5_ - K2T*a1_*a2_*g5*g6*g1_*g2_*g3_*g4_*g5_ + K*a1_*a3_*g2*g1_*g2_*g3_*g4_*g5_*g6_ + K*a2_*a3_*g1*g1_*g2_*g3_*g4_*g5_*g6_ + K*a1_*a2_*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K2*a1_*a3_*g2*g1_*g2_*g3_*g4_*g5_*g6_ + K2*a2_*a3_*g1*g1_*g2_*g3_*g4_*g5_*g6_ + K2*a1_*a2_*g5*g1_*g2_*g3_*g4_*g5_*g6_ - K2T*a1_*a3_*g2*g1_*g2_*g3_*g4_*g5_*g6_ - K2T*a2_*a3_*g1*g1_*g2_*g3_*g4_*g5_*g6_ - K2T*a1_*a2_*g5*g1_*g2_*g3_*g4_*g5_*g6_ - KT*a1_*a3_*g2*g4*g1_*g2_*g3_*g5_*g6_ - KT*a2_*a3_*g1*g4*g1_*g2_*g3_*g5_*g6_ - KT*a1_*a2_*g4*g5*g1_*g2_*g3_*g5_*g6_ - KT*a1_*a3_*g2*g1_*g2_*g3_*g4_*g5_*g6_ - KT*a2_*a3_*g1*g1_*g2_*g3_*g4_*g5_*g6_ - KT*a1_*a2_*g5*g1_*g2_*g3_*g4_*g5_*g6_ + P*a1_*a3_*g2*g3*g1_*g2_*g4_*g5_*g6_ + P*a2_*a3_*g1*g3*g1_*g2_*g4_*g5_*g6_ + P*a1_*a2_*g3*g5*g1_*g2_*g4_*g5_*g6_ + P*a1_*a3_*g2*g1_*g2_*g3_*g4_*g5_*g6_ + P*a2_*a3_*g1*g1_*g2_*g3_*g4_*g5_*g6_ + P*a1_*a2_*g5*g1_*g2_*g3_*g4_*g5_*g6_ - PT*a1_*a3_*g2*g3*g1_*g2_*g4_*g5_*g6_ - PT*a2_*a3_*g1*g3*g1_*g2_*g4_*g5_*g6_ - PT*a1_*a2_*g3*g5*g1_*g2_*g4_*g5_*g6_ - PT*a1_*a3_*g2*g1_*g2_*g3_*g4_*g5_*g6_ - PT*a2_*a3_*g1*g1_*g2_*g3_*g4_*g5_*g6_ - PT*a1_*a2_*g5*g1_*g2_*g3_*g4_*g5_*g6_ + DxT*g1*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K*a3_*g1*g2*g4*g1_*g2_*g3_*g5_*g6_ + K*a1_*g2*g4*g5*g1_*g2_*g3_*g5_*g6_ + K*a2_*g1*g4*g5*g1_*g2_*g3_*g5_*g6_ + K2*a3_*g1*g2*g6*g1_*g2_*g3_*g4_*g5_ + K2*a1_*g2*g5*g6*g1_*g2_*g3_*g4_*g5_ + K2*a2_*g1*g5*g6*g1_*g2_*g3_*g4_*g5_ - K2T*a3_*g1*g2*g6*g1_*g2_*g3_*g4_*g5_ - K2T*a1_*g2*g5*g6*g1_*g2_*g3_*g4_*g5_ - K2T*a2_*g1*g5*g6*g1_*g2_*g3_*g4_*g5_ + K*a3_*g1*g2*g1_*g2_*g3_*g4_*g5_*g6_ + K*a1_*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K*a2_*g1*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K2*a3_*g1*g2*g1_*g2_*g3_*g4_*g5_*g6_ + K2*a1_*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K2*a2_*g1*g5*g1_*g2_*g3_*g4_*g5_*g6_ - K2T*a3_*g1*g2*g1_*g2_*g3_*g4_*g5_*g6_ - K2T*a1_*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ - K2T*a2_*g1*g5*g1_*g2_*g3_*g4_*g5_*g6_ - KT*a3_*g1*g2*g4*g1_*g2_*g3_*g5_*g6_ - KT*a1_*g2*g4*g5*g1_*g2_*g3_*g5_*g6_ - KT*a2_*g1*g4*g5*g1_*g2_*g3_*g5_*g6_ - KT*a3_*g1*g2*g1_*g2_*g3_*g4_*g5_*g6_ - KT*a1_*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ - KT*a2_*g1*g5*g1_*g2_*g3_*g4_*g5_*g6_ + P*a3_*g1*g2*g3*g1_*g2_*g4_*g5_*g6_ + P*a1_*g2*g3*g5*g1_*g2_*g4_*g5_*g6_ + P*a2_*g1*g3*g5*g1_*g2_*g4_*g5_*g6_ + P*a3_*g1*g2*g1_*g2_*g3_*g4_*g5_*g6_ + P*a1_*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ + P*a2_*g1*g5*g1_*g2_*g3_*g4_*g5_*g6_ - PT*a3_*g1*g2*g3*g1_*g2_*g4_*g5_*g6_ - PT*a1_*g2*g3*g5*g1_*g2_*g4_*g5_*g6_ - PT*a2_*g1*g3*g5*g1_*g2_*g4_*g5_*g6_ - PT*a3_*g1*g2*g1_*g2_*g3_*g4_*g5_*g6_ - PT*a1_*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ - PT*a2_*g1*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K*g1*g2*g4*g5*g1_*g2_*g3_*g5_*g6_ + K2*g1*g2*g5*g6*g1_*g2_*g3_*g4_*g5_ - K2T*g1*g2*g5*g6*g1_*g2_*g3_*g4_*g5_ + K*g1*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K2*g1*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ - K2T*g1*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ - KT*g1*g2*g4*g5*g1_*g2_*g3_*g5_*g6_ - KT*g1*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ + P*g1*g2*g3*g5*g1_*g2_*g4_*g5_*g6_ + P*g1*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ - PT*g1*g2*g3*g5*g1_*g2_*g4_*g5_*g6_ - PT*g1*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K^2*a2*a1_*a3_*g2*g4*g1_*g3_*g5_*g6_ + K2^2*a3*a1_*a2_*g5*g6*g1_*g2_*g3_*g4_ + K^2*a2*a1_*a3_*g2*g1_*g3_*g4_*g5_*g6_ + K^2*a2*a1_*a3_*g4*g1_*g2_*g3_*g5_*g6_ + K2^2*a3*a1_*a2_*g5*g1_*g2_*g3_*g4_*g6_ + K2^2*a3*a1_*a2_*g6*g1_*g2_*g3_*g4_*g5_ + K^2*a2*a1_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ + K2^2*a3*a1_*a2_*g1_*g2_*g3_*g4_*g5_*g6_ + P^2*a1*a2_*a3_*g1*g3*g2_*g4_*g5_*g6_ + P^2*a1*a2_*a3_*g1*g2_*g3_*g4_*g5_*g6_ + P^2*a1*a2_*a3_*g3*g1_*g2_*g4_*g5_*g6_ + P^2*a1*a2_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ + K^2*a2*a3_*g1*g2*g4*g1_*g3_*g5_*g6_ + K^2*a2*a1_*g2*g4*g5*g1_*g3_*g5_*g6_ + K2^2*a3*a1_*g2*g5*g6*g1_*g2_*g3_*g4_ + K2^2*a3*a2_*g1*g5*g6*g1_*g2_*g3_*g4_ + K^2*a2*a3_*g1*g2*g1_*g3_*g4_*g5_*g6_ + K^2*a2*a3_*g1*g4*g1_*g2_*g3_*g5_*g6_ + K^2*a2*a1_*g2*g5*g1_*g3_*g4_*g5_*g6_ + K^2*a2*a1_*g4*g5*g1_*g2_*g3_*g5_*g6_ + K2^2*a3*a1_*g2*g5*g1_*g2_*g3_*g4_*g6_ + K2^2*a3*a1_*g2*g6*g1_*g2_*g3_*g4_*g5_ + K2^2*a3*a2_*g1*g5*g1_*g2_*g3_*g4_*g6_ + K2^2*a3*a2_*g1*g6*g1_*g2_*g3_*g4_*g5_ + K^2*a2*a3_*g1*g1_*g2_*g3_*g4_*g5_*g6_ + K^2*a2*a1_*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K2^2*a3*a1_*g2*g1_*g2_*g3_*g4_*g5_*g6_ + K2^2*a3*a2_*g1*g1_*g2_*g3_*g4_*g5_*g6_ + P^2*a1*a3_*g1*g2*g3*g2_*g4_*g5_*g6_ + P^2*a1*a2_*g1*g3*g5*g2_*g4_*g5_*g6_ + P^2*a1*a3_*g1*g2*g2_*g3_*g4_*g5_*g6_ + P^2*a1*a3_*g2*g3*g1_*g2_*g4_*g5_*g6_ + P^2*a1*a2_*g1*g5*g2_*g3_*g4_*g5_*g6_ + P^2*a1*a2_*g3*g5*g1_*g2_*g4_*g5_*g6_ + P^2*a1*a3_*g2*g1_*g2_*g3_*g4_*g5_*g6_ + P^2*a1*a2_*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K^2*a2*g1*g2*g4*g5*g1_*g3_*g5_*g6_ + K2^2*a3*g1*g2*g5*g6*g1_*g2_*g3_*g4_ + K^2*a2*g1*g2*g5*g1_*g3_*g4_*g5_*g6_ + K^2*a2*g1*g4*g5*g1_*g2_*g3_*g5_*g6_ + K2^2*a3*g1*g2*g5*g1_*g2_*g3_*g4_*g6_ + K2^2*a3*g1*g2*g6*g1_*g2_*g3_*g4_*g5_ + K^2*a2*g1*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K2^2*a3*g1*g2*g1_*g2_*g3_*g4_*g5_*g6_ + P^2*a1*g1*g2*g3*g5*g2_*g4_*g5_*g6_ + P^2*a1*g1*g2*g5*g2_*g3_*g4_*g5_*g6_ + P^2*a1*g2*g3*g5*g1_*g2_*g4_*g5_*g6_ + P^2*a1*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ + DxT*K*a2*a1_*a3_*g2*g1_*g3_*g4_*g5_*g6_ + DxT*K2*a3*a1_*a2_*g5*g1_*g2_*g3_*g4_*g6_ + DxT*K*a2*a1_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ + DxT*K2*a3*a1_*a2_*g1_*g2_*g3_*g4_*g5_*g6_ + DzT*K*a2*a1_*a3_*g4*g1_*g2_*g3_*g5_*g6_ + DzT*K2*a3*a1_*a2_*g6*g1_*g2_*g3_*g4_*g5_ + DzT*K*a2*a1_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ + DzT*K2*a3*a1_*a2_*g1_*g2_*g3_*g4_*g5_*g6_ + DxT*P*a1*a2_*a3_*g1*g2_*g3_*g4_*g5_*g6_ + DxT*P*a1*a2_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ + DzT*P*a1*a2_*a3_*g3*g1_*g2_*g4_*g5_*g6_ + DzT*P*a1*a2_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ + DxT*K*a2*a3_*g1*g2*g1_*g3_*g4_*g5_*g6_ + DxT*K*a2*a1_*g2*g5*g1_*g3_*g4_*g5_*g6_ + DxT*K2*a3*a1_*g2*g5*g1_*g2_*g3_*g4_*g6_ + DxT*K2*a3*a2_*g1*g5*g1_*g2_*g3_*g4_*g6_ + DxT*K*a2*a3_*g1*g1_*g2_*g3_*g4_*g5_*g6_ + DxT*K*a2*a1_*g5*g1_*g2_*g3_*g4_*g5_*g6_ + DxT*K2*a3*a1_*g2*g1_*g2_*g3_*g4_*g5_*g6_ + DxT*K2*a3*a2_*g1*g1_*g2_*g3_*g4_*g5_*g6_ + DzT*K*a2*a3_*g1*g4*g1_*g2_*g3_*g5_*g6_ + DzT*K*a2*a1_*g4*g5*g1_*g2_*g3_*g5_*g6_ + DzT*K2*a3*a1_*g2*g6*g1_*g2_*g3_*g4_*g5_ + DzT*K2*a3*a2_*g1*g6*g1_*g2_*g3_*g4_*g5_ + DzT*K*a2*a3_*g1*g1_*g2_*g3_*g4_*g5_*g6_ + DzT*K*a2*a1_*g5*g1_*g2_*g3_*g4_*g5_*g6_ + DzT*K2*a3*a1_*g2*g1_*g2_*g3_*g4_*g5_*g6_ + DzT*K2*a3*a2_*g1*g1_*g2_*g3_*g4_*g5_*g6_ + K*K2*a2*a1_*a3_*g2*g6*g1_*g3_*g4_*g5_ + K*K2*a3*a1_*a2_*g4*g5*g1_*g2_*g3_*g6_ - K*K2T*a2*a1_*a3_*g2*g6*g1_*g3_*g4_*g5_ - K2*K2T*a3*a1_*a2_*g5*g6*g1_*g2_*g3_*g4_ + K*K2*a2*a1_*a3_*g2*g1_*g3_*g4_*g5_*g6_ + K*K2*a2*a1_*a3_*g6*g1_*g2_*g3_*g4_*g5_ + K*K2*a3*a1_*a2_*g4*g1_*g2_*g3_*g5_*g6_ + K*K2*a3*a1_*a2_*g5*g1_*g2_*g3_*g4_*g6_ - K*K2T*a2*a1_*a3_*g2*g1_*g3_*g4_*g5_*g6_ - K*K2T*a2*a1_*a3_*g6*g1_*g2_*g3_*g4_*g5_ - K2*K2T*a3*a1_*a2_*g5*g1_*g2_*g3_*g4_*g6_ - K2*K2T*a3*a1_*a2_*g6*g1_*g2_*g3_*g4_*g5_ + K*K2*a2*a1_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ + K*K2*a3*a1_*a2_*g1_*g2_*g3_*g4_*g5_*g6_ - K*K2T*a2*a1_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ - K2*K2T*a3*a1_*a2_*g1_*g2_*g3_*g4_*g5_*g6_ - K*KT*a2*a1_*a3_*g2*g4*g1_*g3_*g5_*g6_ - K2*KT*a3*a1_*a2_*g4*g5*g1_*g2_*g3_*g6_ - K*KT*a2*a1_*a3_*g2*g1_*g3_*g4_*g5_*g6_ - K*KT*a2*a1_*a3_*g4*g1_*g2_*g3_*g5_*g6_ - K2*KT*a3*a1_*a2_*g4*g1_*g2_*g3_*g5_*g6_ - K2*KT*a3*a1_*a2_*g5*g1_*g2_*g3_*g4_*g6_ - K*KT*a2*a1_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ - K2*KT*a3*a1_*a2_*g1_*g2_*g3_*g4_*g5_*g6_ + DxT*P*a1*a3_*g1*g2*g2_*g3_*g4_*g5_*g6_ + DxT*P*a1*a2_*g1*g5*g2_*g3_*g4_*g5_*g6_ + DxT*P*a1*a3_*g2*g1_*g2_*g3_*g4_*g5_*g6_ + DxT*P*a1*a2_*g5*g1_*g2_*g3_*g4_*g5_*g6_ + DzT*P*a1*a3_*g2*g3*g1_*g2_*g4_*g5_*g6_ + DzT*P*a1*a2_*g3*g5*g1_*g2_*g4_*g5_*g6_ + DzT*P*a1*a3_*g2*g1_*g2_*g3_*g4_*g5_*g6_ + DzT*P*a1*a2_*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K*P*a1*a2_*a3_*g1*g4*g2_*g3_*g5_*g6_ + K*P*a2*a1_*a3_*g2*g3*g1_*g4_*g5_*g6_ + K2*P*a1*a2_*a3_*g1*g6*g2_*g3_*g4_*g5_ + K2*P*a3*a1_*a2_*g3*g5*g1_*g2_*g4_*g6_ - K2T*P*a1*a2_*a3_*g1*g6*g2_*g3_*g4_*g5_ + K*P*a1*a2_*a3_*g1*g2_*g3_*g4_*g5_*g6_ + K*P*a1*a2_*a3_*g4*g1_*g2_*g3_*g5_*g6_ + K*P*a2*a1_*a3_*g2*g1_*g3_*g4_*g5_*g6_ + K*P*a2*a1_*a3_*g3*g1_*g2_*g4_*g5_*g6_ + K2*P*a1*a2_*a3_*g1*g2_*g3_*g4_*g5_*g6_ + K2*P*a1*a2_*a3_*g6*g1_*g2_*g3_*g4_*g5_ + K2*P*a3*a1_*a2_*g3*g1_*g2_*g4_*g5_*g6_ + K2*P*a3*a1_*a2_*g5*g1_*g2_*g3_*g4_*g6_ - K2T*P*a1*a2_*a3_*g1*g2_*g3_*g4_*g5_*g6_ - K2T*P*a1*a2_*a3_*g6*g1_*g2_*g3_*g4_*g5_ + K*P*a1*a2_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ + K*P*a2*a1_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ + K2*P*a1*a2_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ + K2*P*a3*a1_*a2_*g1_*g2_*g3_*g4_*g5_*g6_ - K2T*P*a1*a2_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ - K*PT*a2*a1_*a3_*g2*g3*g1_*g4_*g5_*g6_ - KT*P*a1*a2_*a3_*g1*g4*g2_*g3_*g5_*g6_ - K2*PT*a3*a1_*a2_*g3*g5*g1_*g2_*g4_*g6_ - K*PT*a2*a1_*a3_*g2*g1_*g3_*g4_*g5_*g6_ - K*PT*a2*a1_*a3_*g3*g1_*g2_*g4_*g5_*g6_ - KT*P*a1*a2_*a3_*g1*g2_*g3_*g4_*g5_*g6_ - KT*P*a1*a2_*a3_*g4*g1_*g2_*g3_*g5_*g6_ - K2*PT*a3*a1_*a2_*g3*g1_*g2_*g4_*g5_*g6_ - K2*PT*a3*a1_*a2_*g5*g1_*g2_*g3_*g4_*g6_ - K*PT*a2*a1_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ - KT*P*a1*a2_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ - K2*PT*a3*a1_*a2_*g1_*g2_*g3_*g4_*g5_*g6_ + DxT*K*a2*g1*g2*g5*g1_*g3_*g4_*g5_*g6_ + DxT*K2*a3*g1*g2*g5*g1_*g2_*g3_*g4_*g6_ + DxT*K*a2*g1*g5*g1_*g2_*g3_*g4_*g5_*g6_ + DxT*K2*a3*g1*g2*g1_*g2_*g3_*g4_*g5_*g6_ + DzT*K*a2*g1*g4*g5*g1_*g2_*g3_*g5_*g6_ + DzT*K2*a3*g1*g2*g6*g1_*g2_*g3_*g4_*g5_ + DzT*K*a2*g1*g5*g1_*g2_*g3_*g4_*g5_*g6_ + DzT*K2*a3*g1*g2*g1_*g2_*g3_*g4_*g5_*g6_ + K*K2*a2*a3_*g1*g2*g6*g1_*g3_*g4_*g5_ + K*K2*a3*a1_*g2*g4*g5*g1_*g2_*g3_*g6_ + K*K2*a3*a2_*g1*g4*g5*g1_*g2_*g3_*g6_ + K*K2*a2*a1_*g2*g5*g6*g1_*g3_*g4_*g5_ - K*K2T*a2*a3_*g1*g2*g6*g1_*g3_*g4_*g5_ - K*K2T*a2*a1_*g2*g5*g6*g1_*g3_*g4_*g5_ - K2*K2T*a3*a1_*g2*g5*g6*g1_*g2_*g3_*g4_ - K2*K2T*a3*a2_*g1*g5*g6*g1_*g2_*g3_*g4_ + K*K2*a2*a3_*g1*g2*g1_*g3_*g4_*g5_*g6_ + K*K2*a2*a3_*g1*g6*g1_*g2_*g3_*g4_*g5_ + K*K2*a3*a1_*g2*g4*g1_*g2_*g3_*g5_*g6_ + K*K2*a3*a1_*g2*g5*g1_*g2_*g3_*g4_*g6_ + K*K2*a3*a2_*g1*g4*g1_*g2_*g3_*g5_*g6_ + K*K2*a3*a2_*g1*g5*g1_*g2_*g3_*g4_*g6_ + K*K2*a2*a1_*g2*g5*g1_*g3_*g4_*g5_*g6_ + K*K2*a2*a1_*g5*g6*g1_*g2_*g3_*g4_*g5_ - K*K2T*a2*a3_*g1*g2*g1_*g3_*g4_*g5_*g6_ - K*K2T*a2*a3_*g1*g6*g1_*g2_*g3_*g4_*g5_ - K*K2T*a2*a1_*g2*g5*g1_*g3_*g4_*g5_*g6_ - K*K2T*a2*a1_*g5*g6*g1_*g2_*g3_*g4_*g5_ - K2*K2T*a3*a1_*g2*g5*g1_*g2_*g3_*g4_*g6_ - K2*K2T*a3*a1_*g2*g6*g1_*g2_*g3_*g4_*g5_ - K2*K2T*a3*a2_*g1*g5*g1_*g2_*g3_*g4_*g6_ - K2*K2T*a3*a2_*g1*g6*g1_*g2_*g3_*g4_*g5_ + K*K2*a2*a3_*g1*g1_*g2_*g3_*g4_*g5_*g6_ + K*K2*a3*a1_*g2*g1_*g2_*g3_*g4_*g5_*g6_ + K*K2*a3*a2_*g1*g1_*g2_*g3_*g4_*g5_*g6_ + K*K2*a2*a1_*g5*g1_*g2_*g3_*g4_*g5_*g6_ - K*K2T*a2*a3_*g1*g1_*g2_*g3_*g4_*g5_*g6_ - K*K2T*a2*a1_*g5*g1_*g2_*g3_*g4_*g5_*g6_ - K2*K2T*a3*a1_*g2*g1_*g2_*g3_*g4_*g5_*g6_ - K2*K2T*a3*a2_*g1*g1_*g2_*g3_*g4_*g5_*g6_ - K*KT*a2*a3_*g1*g2*g4*g1_*g3_*g5_*g6_ - K*KT*a2*a1_*g2*g4*g5*g1_*g3_*g5_*g6_ - K2*KT*a3*a1_*g2*g4*g5*g1_*g2_*g3_*g6_ - K2*KT*a3*a2_*g1*g4*g5*g1_*g2_*g3_*g6_ - K*KT*a2*a3_*g1*g2*g1_*g3_*g4_*g5_*g6_ - K*KT*a2*a3_*g1*g4*g1_*g2_*g3_*g5_*g6_ - K*KT*a2*a1_*g2*g5*g1_*g3_*g4_*g5_*g6_ - K*KT*a2*a1_*g4*g5*g1_*g2_*g3_*g5_*g6_ - K2*KT*a3*a1_*g2*g4*g1_*g2_*g3_*g5_*g6_ - K2*KT*a3*a1_*g2*g5*g1_*g2_*g3_*g4_*g6_ - K2*KT*a3*a2_*g1*g4*g1_*g2_*g3_*g5_*g6_ - K2*KT*a3*a2_*g1*g5*g1_*g2_*g3_*g4_*g6_ - K*KT*a2*a3_*g1*g1_*g2_*g3_*g4_*g5_*g6_ - K*KT*a2*a1_*g5*g1_*g2_*g3_*g4_*g5_*g6_ - K2*KT*a3*a1_*g2*g1_*g2_*g3_*g4_*g5_*g6_ - K2*KT*a3*a2_*g1*g1_*g2_*g3_*g4_*g5_*g6_ - P*PT*a1*a2_*a3_*g1*g3*g2_*g4_*g5_*g6_ - P*PT*a1*a2_*a3_*g1*g2_*g3_*g4_*g5_*g6_ - P*PT*a1*a2_*a3_*g3*g1_*g2_*g4_*g5_*g6_ - P*PT*a1*a2_*a3_*g1_*g2_*g3_*g4_*g5_*g6_ + DxT*P*a1*g1*g2*g5*g2_*g3_*g4_*g5_*g6_ + DxT*P*a1*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ + DzT*P*a1*g2*g3*g5*g1_*g2_*g4_*g5_*g6_ + DzT*P*a1*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K*P*a1*a3_*g1*g2*g4*g2_*g3_*g5_*g6_ + K*P*a2*a3_*g1*g2*g3*g1_*g4_*g5_*g6_ + K*P*a1*a2_*g1*g4*g5*g2_*g3_*g5_*g6_ + K*P*a2*a1_*g2*g3*g5*g1_*g4_*g5_*g6_ + K2*P*a1*a3_*g1*g2*g6*g2_*g3_*g4_*g5_ + K2*P*a3*a1_*g2*g3*g5*g1_*g2_*g4_*g6_ + K2*P*a3*a2_*g1*g3*g5*g1_*g2_*g4_*g6_ + K2*P*a1*a2_*g1*g5*g6*g2_*g3_*g4_*g5_ - K2T*P*a1*a3_*g1*g2*g6*g2_*g3_*g4_*g5_ - K2T*P*a1*a2_*g1*g5*g6*g2_*g3_*g4_*g5_ + K*P*a1*a3_*g1*g2*g2_*g3_*g4_*g5_*g6_ + K*P*a1*a3_*g2*g4*g1_*g2_*g3_*g5_*g6_ + K*P*a2*a3_*g1*g2*g1_*g3_*g4_*g5_*g6_ + K*P*a2*a3_*g1*g3*g1_*g2_*g4_*g5_*g6_ + K*P*a1*a2_*g1*g5*g2_*g3_*g4_*g5_*g6_ + K*P*a1*a2_*g4*g5*g1_*g2_*g3_*g5_*g6_ + K*P*a2*a1_*g2*g5*g1_*g3_*g4_*g5_*g6_ + K*P*a2*a1_*g3*g5*g1_*g2_*g4_*g5_*g6_ + K2*P*a1*a3_*g1*g2*g2_*g3_*g4_*g5_*g6_ + K2*P*a1*a3_*g2*g6*g1_*g2_*g3_*g4_*g5_ + K2*P*a3*a1_*g2*g3*g1_*g2_*g4_*g5_*g6_ + K2*P*a3*a1_*g2*g5*g1_*g2_*g3_*g4_*g6_ + K2*P*a3*a2_*g1*g3*g1_*g2_*g4_*g5_*g6_ + K2*P*a3*a2_*g1*g5*g1_*g2_*g3_*g4_*g6_ + K2*P*a1*a2_*g1*g5*g2_*g3_*g4_*g5_*g6_ + K2*P*a1*a2_*g5*g6*g1_*g2_*g3_*g4_*g5_ - K2T*P*a1*a3_*g1*g2*g2_*g3_*g4_*g5_*g6_ - K2T*P*a1*a3_*g2*g6*g1_*g2_*g3_*g4_*g5_ - K2T*P*a1*a2_*g1*g5*g2_*g3_*g4_*g5_*g6_ - K2T*P*a1*a2_*g5*g6*g1_*g2_*g3_*g4_*g5_ + K*P*a1*a3_*g2*g1_*g2_*g3_*g4_*g5_*g6_ + K*P*a2*a3_*g1*g1_*g2_*g3_*g4_*g5_*g6_ + K*P*a1*a2_*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K*P*a2*a1_*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K2*P*a1*a3_*g2*g1_*g2_*g3_*g4_*g5_*g6_ + K2*P*a3*a1_*g2*g1_*g2_*g3_*g4_*g5_*g6_ + K2*P*a3*a2_*g1*g1_*g2_*g3_*g4_*g5_*g6_ + K2*P*a1*a2_*g5*g1_*g2_*g3_*g4_*g5_*g6_ - K2T*P*a1*a3_*g2*g1_*g2_*g3_*g4_*g5_*g6_ - K2T*P*a1*a2_*g5*g1_*g2_*g3_*g4_*g5_*g6_ - K*PT*a2*a3_*g1*g2*g3*g1_*g4_*g5_*g6_ - KT*P*a1*a3_*g1*g2*g4*g2_*g3_*g5_*g6_ - K*PT*a2*a1_*g2*g3*g5*g1_*g4_*g5_*g6_ - K2*PT*a3*a1_*g2*g3*g5*g1_*g2_*g4_*g6_ - K2*PT*a3*a2_*g1*g3*g5*g1_*g2_*g4_*g6_ - KT*P*a1*a2_*g1*g4*g5*g2_*g3_*g5_*g6_ - K*PT*a2*a3_*g1*g2*g1_*g3_*g4_*g5_*g6_ - K*PT*a2*a3_*g1*g3*g1_*g2_*g4_*g5_*g6_ - KT*P*a1*a3_*g1*g2*g2_*g3_*g4_*g5_*g6_ - KT*P*a1*a3_*g2*g4*g1_*g2_*g3_*g5_*g6_ - K*PT*a2*a1_*g2*g5*g1_*g3_*g4_*g5_*g6_ - K*PT*a2*a1_*g3*g5*g1_*g2_*g4_*g5_*g6_ - K2*PT*a3*a1_*g2*g3*g1_*g2_*g4_*g5_*g6_ - K2*PT*a3*a1_*g2*g5*g1_*g2_*g3_*g4_*g6_ - K2*PT*a3*a2_*g1*g3*g1_*g2_*g4_*g5_*g6_ - K2*PT*a3*a2_*g1*g5*g1_*g2_*g3_*g4_*g6_ - KT*P*a1*a2_*g1*g5*g2_*g3_*g4_*g5_*g6_ - KT*P*a1*a2_*g4*g5*g1_*g2_*g3_*g5_*g6_ - K*PT*a2*a3_*g1*g1_*g2_*g3_*g4_*g5_*g6_ - KT*P*a1*a3_*g2*g1_*g2_*g3_*g4_*g5_*g6_ - K*PT*a2*a1_*g5*g1_*g2_*g3_*g4_*g5_*g6_ - K2*PT*a3*a1_*g2*g1_*g2_*g3_*g4_*g5_*g6_ - K2*PT*a3*a2_*g1*g1_*g2_*g3_*g4_*g5_*g6_ - KT*P*a1*a2_*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K*K2*a3*g1*g2*g4*g5*g1_*g2_*g3_*g6_ + K*K2*a2*g1*g2*g5*g6*g1_*g3_*g4_*g5_ - K*K2T*a2*g1*g2*g5*g6*g1_*g3_*g4_*g5_ - K2*K2T*a3*g1*g2*g5*g6*g1_*g2_*g3_*g4_ + K*K2*a3*g1*g2*g4*g1_*g2_*g3_*g5_*g6_ + K*K2*a3*g1*g2*g5*g1_*g2_*g3_*g4_*g6_ + K*K2*a2*g1*g2*g5*g1_*g3_*g4_*g5_*g6_ + K*K2*a2*g1*g5*g6*g1_*g2_*g3_*g4_*g5_ - K*K2T*a2*g1*g2*g5*g1_*g3_*g4_*g5_*g6_ - K*K2T*a2*g1*g5*g6*g1_*g2_*g3_*g4_*g5_ - K2*K2T*a3*g1*g2*g5*g1_*g2_*g3_*g4_*g6_ - K2*K2T*a3*g1*g2*g6*g1_*g2_*g3_*g4_*g5_ + K*K2*a3*g1*g2*g1_*g2_*g3_*g4_*g5_*g6_ + K*K2*a2*g1*g5*g1_*g2_*g3_*g4_*g5_*g6_ - K*K2T*a2*g1*g5*g1_*g2_*g3_*g4_*g5_*g6_ - K2*K2T*a3*g1*g2*g1_*g2_*g3_*g4_*g5_*g6_ - K*KT*a2*g1*g2*g4*g5*g1_*g3_*g5_*g6_ - K2*KT*a3*g1*g2*g4*g5*g1_*g2_*g3_*g6_ - K*KT*a2*g1*g2*g5*g1_*g3_*g4_*g5_*g6_ - K*KT*a2*g1*g4*g5*g1_*g2_*g3_*g5_*g6_ - K2*KT*a3*g1*g2*g4*g1_*g2_*g3_*g5_*g6_ - K2*KT*a3*g1*g2*g5*g1_*g2_*g3_*g4_*g6_ - K*KT*a2*g1*g5*g1_*g2_*g3_*g4_*g5_*g6_ - K2*KT*a3*g1*g2*g1_*g2_*g3_*g4_*g5_*g6_ - P*PT*a1*a3_*g1*g2*g3*g2_*g4_*g5_*g6_ - P*PT*a1*a2_*g1*g3*g5*g2_*g4_*g5_*g6_ - P*PT*a1*a3_*g1*g2*g2_*g3_*g4_*g5_*g6_ - P*PT*a1*a3_*g2*g3*g1_*g2_*g4_*g5_*g6_ - P*PT*a1*a2_*g1*g5*g2_*g3_*g4_*g5_*g6_ - P*PT*a1*a2_*g3*g5*g1_*g2_*g4_*g5_*g6_ - P*PT*a1*a3_*g2*g1_*g2_*g3_*g4_*g5_*g6_ - P*PT*a1*a2_*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K*P*a1*g1*g2*g4*g5*g2_*g3_*g5_*g6_ + K*P*a2*g1*g2*g3*g5*g1_*g4_*g5_*g6_ + K2*P*a3*g1*g2*g3*g5*g1_*g2_*g4_*g6_ + K2*P*a1*g1*g2*g5*g6*g2_*g3_*g4_*g5_ - K2T*P*a1*g1*g2*g5*g6*g2_*g3_*g4_*g5_ + K*P*a1*g1*g2*g5*g2_*g3_*g4_*g5_*g6_ + K*P*a1*g2*g4*g5*g1_*g2_*g3_*g5_*g6_ + K*P*a2*g1*g2*g5*g1_*g3_*g4_*g5_*g6_ + K*P*a2*g1*g3*g5*g1_*g2_*g4_*g5_*g6_ + K2*P*a3*g1*g2*g3*g1_*g2_*g4_*g5_*g6_ + K2*P*a3*g1*g2*g5*g1_*g2_*g3_*g4_*g6_ + K2*P*a1*g1*g2*g5*g2_*g3_*g4_*g5_*g6_ + K2*P*a1*g2*g5*g6*g1_*g2_*g3_*g4_*g5_ - K2T*P*a1*g1*g2*g5*g2_*g3_*g4_*g5_*g6_ - K2T*P*a1*g2*g5*g6*g1_*g2_*g3_*g4_*g5_ + K*P*a1*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K*P*a2*g1*g5*g1_*g2_*g3_*g4_*g5_*g6_ + K2*P*a3*g1*g2*g1_*g2_*g3_*g4_*g5_*g6_ + K2*P*a1*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ - K2T*P*a1*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ - K*PT*a2*g1*g2*g3*g5*g1_*g4_*g5_*g6_ - K2*PT*a3*g1*g2*g3*g5*g1_*g2_*g4_*g6_ - KT*P*a1*g1*g2*g4*g5*g2_*g3_*g5_*g6_ - K*PT*a2*g1*g2*g5*g1_*g3_*g4_*g5_*g6_ - K*PT*a2*g1*g3*g5*g1_*g2_*g4_*g5_*g6_ - K2*PT*a3*g1*g2*g3*g1_*g2_*g4_*g5_*g6_ - K2*PT*a3*g1*g2*g5*g1_*g2_*g3_*g4_*g6_ - KT*P*a1*g1*g2*g5*g2_*g3_*g4_*g5_*g6_ - KT*P*a1*g2*g4*g5*g1_*g2_*g3_*g5_*g6_ - K*PT*a2*g1*g5*g1_*g2_*g3_*g4_*g5_*g6_ - K2*PT*a3*g1*g2*g1_*g2_*g3_*g4_*g5_*g6_ - KT*P*a1*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_ - P*PT*a1*g1*g2*g3*g5*g2_*g4_*g5_*g6_ - P*PT*a1*g1*g2*g5*g2_*g3_*g4_*g5_*g6_ - P*PT*a1*g2*g3*g5*g1_*g2_*g4_*g5_*g6_ - P*PT*a1*g2*g5*g1_*g2_*g3_*g4_*g5_*g6_)/(g3_*g4_*g6_*(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_));



Dx_=@(P,K,K2) -(g3*(P*a1_*a2_*a3_*g1_*g2_*g5_ - PT*a1_*a2_*a3_*g1_*g2_*g5_ + P*a1_*a3_*g2*g1_*g2_*g5_ + P*a2_*a3_*g1*g1_*g2_*g5_ + P*a1_*a2_*g5*g1_*g2_*g5_ - PT*a1_*a3_*g2*g1_*g2_*g5_ - PT*a2_*a3_*g1*g1_*g2_*g5_ - PT*a1_*a2_*g5*g1_*g2_*g5_ + P*a3_*g1*g2*g1_*g2_*g5_ + P*a1_*g2*g5*g1_*g2_*g5_ + P*a2_*g1*g5*g1_*g2_*g5_ - PT*a3_*g1*g2*g1_*g2_*g5_ - PT*a1_*g2*g5*g1_*g2_*g5_ - PT*a2_*g1*g5*g1_*g2_*g5_ + P*g1*g2*g5*g1_*g2_*g5_ - PT*g1*g2*g5*g1_*g2_*g5_ + P^2*a1*a2_*a3_*g1*g2_*g5_ + P^2*a1*a2_*a3_*g1_*g2_*g5_ + P^2*a1*a3_*g1*g2*g2_*g5_ + P^2*a1*a2_*g1*g5*g2_*g5_ + P^2*a1*a3_*g2*g1_*g2_*g5_ + P^2*a1*a2_*g5*g1_*g2_*g5_ + P^2*a1*g1*g2*g5*g2_*g5_ + P^2*a1*g2*g5*g1_*g2_*g5_ + DzT*P*a1*a2_*a3_*g1_*g2_*g5_ + DzT*P*a1*a3_*g2*g1_*g2_*g5_ + DzT*P*a1*a2_*g5*g1_*g2_*g5_ + K*P*a2*a1_*a3_*g2*g1_*g5_ + K2*P*a3*a1_*a2_*g5*g1_*g2_ + K*P*a2*a1_*a3_*g1_*g2_*g5_ + K2*P*a3*a1_*a2_*g1_*g2_*g5_ - K*PT*a2*a1_*a3_*g2*g1_*g5_ - K2*PT*a3*a1_*a2_*g5*g1_*g2_ - K*PT*a2*a1_*a3_*g1_*g2_*g5_ - K2*PT*a3*a1_*a2_*g1_*g2_*g5_ - P*PT*a1*a2_*a3_*g1*g2_*g5_ - P*PT*a1*a2_*a3_*g1_*g2_*g5_ + DzT*P*a1*g2*g5*g1_*g2_*g5_ + K*P*a2*a3_*g1*g2*g1_*g5_ + K*P*a2*a1_*g2*g5*g1_*g5_ + K2*P*a3*a1_*g2*g5*g1_*g2_ + K2*P*a3*a2_*g1*g5*g1_*g2_ + K*P*a2*a3_*g1*g1_*g2_*g5_ + K*P*a2*a1_*g5*g1_*g2_*g5_ + K2*P*a3*a1_*g2*g1_*g2_*g5_ + K2*P*a3*a2_*g1*g1_*g2_*g5_ - K*PT*a2*a3_*g1*g2*g1_*g5_ - K*PT*a2*a1_*g2*g5*g1_*g5_ - K2*PT*a3*a1_*g2*g5*g1_*g2_ - K2*PT*a3*a2_*g1*g5*g1_*g2_ - K*PT*a2*a3_*g1*g1_*g2_*g5_ - K*PT*a2*a1_*g5*g1_*g2_*g5_ - K2*PT*a3*a1_*g2*g1_*g2_*g5_ - K2*PT*a3*a2_*g1*g1_*g2_*g5_ - P*PT*a1*a3_*g1*g2*g2_*g5_ - P*PT*a1*a2_*g1*g5*g2_*g5_ - P*PT*a1*a3_*g2*g1_*g2_*g5_ - P*PT*a1*a2_*g5*g1_*g2_*g5_ + K*P*a2*g1*g2*g5*g1_*g5_ + K2*P*a3*g1*g2*g5*g1_*g2_ + K*P*a2*g1*g5*g1_*g2_*g5_ + K2*P*a3*g1*g2*g1_*g2_*g5_ - K*PT*a2*g1*g2*g5*g1_*g5_ - K2*PT*a3*g1*g2*g5*g1_*g2_ - K*PT*a2*g1*g5*g1_*g2_*g5_ - K2*PT*a3*g1*g2*g1_*g2_*g5_ - P*PT*a1*g1*g2*g5*g2_*g5_ - P*PT*a1*g2*g5*g1_*g2_*g5_))/(g3_*(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_));



Cxp=@(P,K,K2) -(P*a1_*a2_*a3_*g1_*g2_*g5_ - PT*a1_*a2_*a3_*g1_*g2_*g5_ + P*a1_*a3_*g2*g1_*g2_*g5_ + P*a2_*a3_*g1*g1_*g2_*g5_ + P*a1_*a2_*g5*g1_*g2_*g5_ - PT*a1_*a3_*g2*g1_*g2_*g5_ - PT*a2_*a3_*g1*g1_*g2_*g5_ - PT*a1_*a2_*g5*g1_*g2_*g5_ + P*a3_*g1*g2*g1_*g2_*g5_ + P*a1_*g2*g5*g1_*g2_*g5_ + P*a2_*g1*g5*g1_*g2_*g5_ - PT*a3_*g1*g2*g1_*g2_*g5_ - PT*a1_*g2*g5*g1_*g2_*g5_ - PT*a2_*g1*g5*g1_*g2_*g5_ + P*g1*g2*g5*g1_*g2_*g5_ - PT*g1*g2*g5*g1_*g2_*g5_ + P^2*a1*a2_*a3_*g1*g2_*g5_ + P^2*a1*a2_*a3_*g1_*g2_*g5_ + P^2*a1*a3_*g1*g2*g2_*g5_ + P^2*a1*a2_*g1*g5*g2_*g5_ + P^2*a1*a3_*g2*g1_*g2_*g5_ + P^2*a1*a2_*g5*g1_*g2_*g5_ + P^2*a1*g1*g2*g5*g2_*g5_ + P^2*a1*g2*g5*g1_*g2_*g5_ + DzT*P*a1*a2_*a3_*g1_*g2_*g5_ + DzT*P*a1*a3_*g2*g1_*g2_*g5_ + DzT*P*a1*a2_*g5*g1_*g2_*g5_ + K*P*a2*a1_*a3_*g2*g1_*g5_ + K2*P*a3*a1_*a2_*g5*g1_*g2_ + K*P*a2*a1_*a3_*g1_*g2_*g5_ + K2*P*a3*a1_*a2_*g1_*g2_*g5_ - K*PT*a2*a1_*a3_*g2*g1_*g5_ - K2*PT*a3*a1_*a2_*g5*g1_*g2_ - K*PT*a2*a1_*a3_*g1_*g2_*g5_ - K2*PT*a3*a1_*a2_*g1_*g2_*g5_ - P*PT*a1*a2_*a3_*g1*g2_*g5_ - P*PT*a1*a2_*a3_*g1_*g2_*g5_ + DzT*P*a1*g2*g5*g1_*g2_*g5_ + K*P*a2*a3_*g1*g2*g1_*g5_ + K*P*a2*a1_*g2*g5*g1_*g5_ + K2*P*a3*a1_*g2*g5*g1_*g2_ + K2*P*a3*a2_*g1*g5*g1_*g2_ + K*P*a2*a3_*g1*g1_*g2_*g5_ + K*P*a2*a1_*g5*g1_*g2_*g5_ + K2*P*a3*a1_*g2*g1_*g2_*g5_ + K2*P*a3*a2_*g1*g1_*g2_*g5_ - K*PT*a2*a3_*g1*g2*g1_*g5_ - K*PT*a2*a1_*g2*g5*g1_*g5_ - K2*PT*a3*a1_*g2*g5*g1_*g2_ - K2*PT*a3*a2_*g1*g5*g1_*g2_ - K*PT*a2*a3_*g1*g1_*g2_*g5_ - K*PT*a2*a1_*g5*g1_*g2_*g5_ - K2*PT*a3*a1_*g2*g1_*g2_*g5_ - K2*PT*a3*a2_*g1*g1_*g2_*g5_ - P*PT*a1*a3_*g1*g2*g2_*g5_ - P*PT*a1*a2_*g1*g5*g2_*g5_ - P*PT*a1*a3_*g2*g1_*g2_*g5_ - P*PT*a1*a2_*g5*g1_*g2_*g5_ + K*P*a2*g1*g2*g5*g1_*g5_ + K2*P*a3*g1*g2*g5*g1_*g2_ + K*P*a2*g1*g5*g1_*g2_*g5_ + K2*P*a3*g1*g2*g1_*g2_*g5_ - K*PT*a2*g1*g2*g5*g1_*g5_ - K2*PT*a3*g1*g2*g5*g1_*g2_ - K*PT*a2*g1*g5*g1_*g2_*g5_ - K2*PT*a3*g1*g2*g1_*g2_*g5_ - P*PT*a1*g1*g2*g5*g2_*g5_ - P*PT*a1*g2*g5*g1_*g2_*g5_)/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_);

 E=@(P,K,K2) Dz1(P,K,K2)+Dz2(P,K,K2)+Czk(P,K,K2)+Czk2(P,K,K2)+rho*Dz(P,K,K2);
 
 

 %%formula generated using generate_promoter_state_formulae.m
 F0 =@(P,K,K2) [   P - PT + (DzT*P*a1*g1_*g2_*g5_*(a2_ + g2)*(a3_ + g5))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_) + (DxT*P*b1*g3_*g4_*g6_*(b2_ + g4)*(b3_ + g6))/(b1_*b2_*b3_*g3_*g4_*g6_ + b1_*b3_*g4*g3_*g4_*g6_ + b2_*b3_*g3*g3_*g4_*g6_ + b1_*b2_*g6*g3_*g4_*g6_ + b3_*g3*g4*g3_*g4_*g6_ + b1_*g4*g6*g3_*g4_*g6_ + b2_*g3*g6*g3_*g4_*g6_ + g3*g4*g6*g3_*g4_*g6_ + K*b2*b1_*b3_*g4*g3_*g6_ + K2*b3*b1_*b2_*g6*g3_*g4_ + K*b2*b1_*b3_*g3_*g4_*g6_ + K2*b3*b1_*b2_*g3_*g4_*g6_ + K*b2*b3_*g3*g4*g3_*g6_ + K*b2*b1_*g4*g6*g3_*g6_ + K2*b3*b1_*g4*g6*g3_*g4_ + K2*b3*b2_*g3*g6*g3_*g4_ + P*b1*b2_*b3_*g3*g4_*g6_ + K*b2*b3_*g3*g3_*g4_*g6_ + K*b2*b1_*g6*g3_*g4_*g6_ + K2*b3*b1_*g4*g3_*g4_*g6_ + K2*b3*b2_*g3*g3_*g4_*g6_ + P*b1*b2_*b3_*g3_*g4_*g6_ + K*b2*g3*g4*g6*g3_*g6_ + K2*b3*g3*g4*g6*g3_*g4_ + P*b1*b3_*g3*g4*g4_*g6_ + P*b1*b2_*g3*g6*g4_*g6_ + K*b2*g3*g6*g3_*g4_*g6_ + K2*b3*g3*g4*g3_*g4_*g6_ + P*b1*b3_*g4*g3_*g4_*g6_ + P*b1*b2_*g6*g3_*g4_*g6_ + P*b1*g3*g4*g6*g4_*g6_ + P*b1*g4*g6*g3_*g4_*g6_);
     K - KT + (DzT*K*a2*g1_*g2_*g5_*(a1_ + g1)*(a3_ + g5))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_) + (DxT*K*b2*g3_*g4_*g6_*(b1_ + g3)*(b3_ + g6))/(b1_*b2_*b3_*g3_*g4_*g6_ + b1_*b3_*g4*g3_*g4_*g6_ + b2_*b3_*g3*g3_*g4_*g6_ + b1_*b2_*g6*g3_*g4_*g6_ + b3_*g3*g4*g3_*g4_*g6_ + b1_*g4*g6*g3_*g4_*g6_ + b2_*g3*g6*g3_*g4_*g6_ + g3*g4*g6*g3_*g4_*g6_ + K*b2*b1_*b3_*g4*g3_*g6_ + K2*b3*b1_*b2_*g6*g3_*g4_ + K*b2*b1_*b3_*g3_*g4_*g6_ + K2*b3*b1_*b2_*g3_*g4_*g6_ + K*b2*b3_*g3*g4*g3_*g6_ + K*b2*b1_*g4*g6*g3_*g6_ + K2*b3*b1_*g4*g6*g3_*g4_ + K2*b3*b2_*g3*g6*g3_*g4_ + P*b1*b2_*b3_*g3*g4_*g6_ + K*b2*b3_*g3*g3_*g4_*g6_ + K*b2*b1_*g6*g3_*g4_*g6_ + K2*b3*b1_*g4*g3_*g4_*g6_ + K2*b3*b2_*g3*g3_*g4_*g6_ + P*b1*b2_*b3_*g3_*g4_*g6_ + K*b2*g3*g4*g6*g3_*g6_ + K2*b3*g3*g4*g6*g3_*g4_ + P*b1*b3_*g3*g4*g4_*g6_ + P*b1*b2_*g3*g6*g4_*g6_ + K*b2*g3*g6*g3_*g4_*g6_ + K2*b3*g3*g4*g3_*g4_*g6_ + P*b1*b3_*g4*g3_*g4_*g6_ + P*b1*b2_*g6*g3_*g4_*g6_ + P*b1*g3*g4*g6*g4_*g6_ + P*b1*g4*g6*g3_*g4_*g6_);
 K2 - K2T + (DzT*K2*a3*g1_*g2_*g5_*(a1_ + g1)*(a2_ + g2))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_) + (DxT*K2*b3*g3_*g4_*g6_*(b1_ + g3)*(b2_ + g4))/(b1_*b2_*b3_*g3_*g4_*g6_ + b1_*b3_*g4*g3_*g4_*g6_ + b2_*b3_*g3*g3_*g4_*g6_ + b1_*b2_*g6*g3_*g4_*g6_ + b3_*g3*g4*g3_*g4_*g6_ + b1_*g4*g6*g3_*g4_*g6_ + b2_*g3*g6*g3_*g4_*g6_ + g3*g4*g6*g3_*g4_*g6_ + K*b2*b1_*b3_*g4*g3_*g6_ + K2*b3*b1_*b2_*g6*g3_*g4_ + K*b2*b1_*b3_*g3_*g4_*g6_ + K2*b3*b1_*b2_*g3_*g4_*g6_ + K*b2*b3_*g3*g4*g3_*g6_ + K*b2*b1_*g4*g6*g3_*g6_ + K2*b3*b1_*g4*g6*g3_*g4_ + K2*b3*b2_*g3*g6*g3_*g4_ + P*b1*b2_*b3_*g3*g4_*g6_ + K*b2*b3_*g3*g3_*g4_*g6_ + K*b2*b1_*g6*g3_*g4_*g6_ + K2*b3*b1_*g4*g3_*g4_*g6_ + K2*b3*b2_*g3*g3_*g4_*g6_ + P*b1*b2_*b3_*g3_*g4_*g6_ + K*b2*g3*g4*g6*g3_*g6_ + K2*b3*g3*g4*g6*g3_*g4_ + P*b1*b3_*g3*g4*g4_*g6_ + P*b1*b2_*g3*g6*g4_*g6_ + K*b2*g3*g6*g3_*g4_*g6_ + K2*b3*g3*g4*g3_*g4_*g6_ + P*b1*b3_*g4*g3_*g4_*g6_ + P*b1*b2_*g6*g3_*g4_*g6_ + P*b1*g3*g4*g6*g4_*g6_ + P*b1*g4*g6*g3_*g4_*g6_)];
 
  
 
 
dF0 =@(P,K,K2)    [ (DzT*a1*g1_*g2_*g5_*(a2_ + g2)*(a3_ + g5))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_) + (DxT*b1*g3_*g4_*g6_*(b2_ + g4)*(b3_ + g6))/(b1_*b2_*b3_*g3_*g4_*g6_ + b1_*b3_*g4*g3_*g4_*g6_ + b2_*b3_*g3*g3_*g4_*g6_ + b1_*b2_*g6*g3_*g4_*g6_ + b3_*g3*g4*g3_*g4_*g6_ + b1_*g4*g6*g3_*g4_*g6_ + b2_*g3*g6*g3_*g4_*g6_ + g3*g4*g6*g3_*g4_*g6_ + K*b2*b1_*b3_*g4*g3_*g6_ + K2*b3*b1_*b2_*g6*g3_*g4_ + K*b2*b1_*b3_*g3_*g4_*g6_ + K2*b3*b1_*b2_*g3_*g4_*g6_ + K*b2*b3_*g3*g4*g3_*g6_ + K*b2*b1_*g4*g6*g3_*g6_ + K2*b3*b1_*g4*g6*g3_*g4_ + K2*b3*b2_*g3*g6*g3_*g4_ + P*b1*b2_*b3_*g3*g4_*g6_ + K*b2*b3_*g3*g3_*g4_*g6_ + K*b2*b1_*g6*g3_*g4_*g6_ + K2*b3*b1_*g4*g3_*g4_*g6_ + K2*b3*b2_*g3*g3_*g4_*g6_ + P*b1*b2_*b3_*g3_*g4_*g6_ + K*b2*g3*g4*g6*g3_*g6_ + K2*b3*g3*g4*g6*g3_*g4_ + P*b1*b3_*g3*g4*g4_*g6_ + P*b1*b2_*g3*g6*g4_*g6_ + K*b2*g3*g6*g3_*g4_*g6_ + K2*b3*g3*g4*g3_*g4_*g6_ + P*b1*b3_*g4*g3_*g4_*g6_ + P*b1*b2_*g6*g3_*g4_*g6_ + P*b1*g3*g4*g6*g4_*g6_ + P*b1*g4*g6*g3_*g4_*g6_) - (DxT*P*b1*g3_*g4_*g6_*(b2_ + g4)*(b3_ + g6)*(b1*b2_*b3_*g3*g4_*g6_ + b1*b2_*b3_*g3_*g4_*g6_ + b1*b3_*g3*g4*g4_*g6_ + b1*b2_*g3*g6*g4_*g6_ + b1*b3_*g4*g3_*g4_*g6_ + b1*b2_*g6*g3_*g4_*g6_ + b1*g3*g4*g6*g4_*g6_ + b1*g4*g6*g3_*g4_*g6_))/(b1_*b2_*b3_*g3_*g4_*g6_ + b1_*b3_*g4*g3_*g4_*g6_ + b2_*b3_*g3*g3_*g4_*g6_ + b1_*b2_*g6*g3_*g4_*g6_ + b3_*g3*g4*g3_*g4_*g6_ + b1_*g4*g6*g3_*g4_*g6_ + b2_*g3*g6*g3_*g4_*g6_ + g3*g4*g6*g3_*g4_*g6_ + K*b2*b1_*b3_*g4*g3_*g6_ + K2*b3*b1_*b2_*g6*g3_*g4_ + K*b2*b1_*b3_*g3_*g4_*g6_ + K2*b3*b1_*b2_*g3_*g4_*g6_ + K*b2*b3_*g3*g4*g3_*g6_ + K*b2*b1_*g4*g6*g3_*g6_ + K2*b3*b1_*g4*g6*g3_*g4_ + K2*b3*b2_*g3*g6*g3_*g4_ + P*b1*b2_*b3_*g3*g4_*g6_ + K*b2*b3_*g3*g3_*g4_*g6_ + K*b2*b1_*g6*g3_*g4_*g6_ + K2*b3*b1_*g4*g3_*g4_*g6_ + K2*b3*b2_*g3*g3_*g4_*g6_ + P*b1*b2_*b3_*g3_*g4_*g6_ + K*b2*g3*g4*g6*g3_*g6_ + K2*b3*g3*g4*g6*g3_*g4_ + P*b1*b3_*g3*g4*g4_*g6_ + P*b1*b2_*g3*g6*g4_*g6_ + K*b2*g3*g6*g3_*g4_*g6_ + K2*b3*g3*g4*g3_*g4_*g6_ + P*b1*b3_*g4*g3_*g4_*g6_ + P*b1*b2_*g6*g3_*g4_*g6_ + P*b1*g3*g4*g6*g4_*g6_ + P*b1*g4*g6*g3_*g4_*g6_)^2 - (DzT*P*a1*g1_*g2_*g5_*(a2_ + g2)*(a3_ + g5)*(a1*a2_*a3_*g1*g2_*g5_ + a1*a2_*a3_*g1_*g2_*g5_ + a1*a3_*g1*g2*g2_*g5_ + a1*a2_*g1*g5*g2_*g5_ + a1*a3_*g2*g1_*g2_*g5_ + a1*a2_*g5*g1_*g2_*g5_ + a1*g1*g2*g5*g2_*g5_ + a1*g2*g5*g1_*g2_*g5_))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*gxT*P*b1*g3_*g4_*g6_*(b2_ + g4)*(b3_ + g6)*(b2*b1_*b3_*g4*g3_*g6_ + b2*b1_*b3_*g3_*g4_*g6_ + b2*b3_*g3*g4*g3_*g6_ + b2*b1_*g4*g6*g3_*g6_ + b2*b3_*g3*g3_*g4_*g6_ + b2*b1_*g6*g3_*g4_*g6_ + b2*g3*g4*g6*g3_*g6_ + b2*g3*g6*g3_*g4_*g6_))/(b1_*b2_*b3_*g3_*g4_*g6_ + b1_*b3_*g4*g3_*g4_*g6_ + b2_*b3_*g3*g3_*g4_*g6_ + b1_*b2_*g6*g3_*g4_*g6_ + b3_*g3*g4*g3_*g4_*g6_ + b1_*g4*g6*g3_*g4_*g6_ + b2_*g3*g6*g3_*g4_*g6_ + g3*g4*g6*g3_*g4_*g6_ + K*b2*b1_*b3_*g4*g3_*g6_ + K2*b3*b1_*b2_*g6*g3_*g4_ + K*b2*b1_*b3_*g3_*g4_*g6_ + K2*b3*b1_*b2_*g3_*g4_*g6_ + K*b2*b3_*g3*g4*g3_*g6_ + K*b2*b1_*g4*g6*g3_*g6_ + K2*b3*b1_*g4*g6*g3_*g4_ + K2*b3*b2_*g3*g6*g3_*g4_ + P*b1*b2_*b3_*g3*g4_*g6_ + K*b2*b3_*g3*g3_*g4_*g6_ + K*b2*b1_*g6*g3_*g4_*g6_ + K2*b3*b1_*g4*g3_*g4_*g6_ + K2*b3*b2_*g3*g3_*g4_*g6_ + P*b1*b2_*b3_*g3_*g4_*g6_ + K*b2*g3*g4*g6*g3_*g6_ + K2*b3*g3*g4*g6*g3_*g4_ + P*b1*b3_*g3*g4*g4_*g6_ + P*b1*b2_*g3*g6*g4_*g6_ + K*b2*g3*g6*g3_*g4_*g6_ + K2*b3*g3*g4*g3_*g4_*g6_ + P*b1*b3_*g4*g3_*g4_*g6_ + P*b1*b2_*g6*g3_*g4_*g6_ + P*b1*g3*g4*g6*g4_*g6_ + P*b1*g4*g6*g3_*g4_*g6_)^2 - (DzT*P*a1*g1_*g2_*g5_*(a2_ + g2)*(a3_ + g5)*(a2*a1_*a3_*g2*g1_*g5_ + a2*a1_*a3_*g1_*g2_*g5_ + a2*a3_*g1*g2*g1_*g5_ + a2*a1_*g2*g5*g1_*g5_ + a2*a3_*g1*g1_*g2_*g5_ + a2*a1_*g5*g1_*g2_*g5_ + a2*g1*g2*g5*g1_*g5_ + a2*g1*g5*g1_*g2_*g5_))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*gxT*P*b1*g3_*g4_*g6_*(b2_ + g4)*(b3_ + g6)*(b3*b1_*b2_*g6*g3_*g4_ + b3*b1_*b2_*g3_*g4_*g6_ + b3*b1_*g4*g6*g3_*g4_ + b3*b2_*g3*g6*g3_*g4_ + b3*b1_*g4*g3_*g4_*g6_ + b3*b2_*g3*g3_*g4_*g6_ + b3*g3*g4*g6*g3_*g4_ + b3*g3*g4*g3_*g4_*g6_))/(b1_*b2_*b3_*g3_*g4_*g6_ + b1_*b3_*g4*g3_*g4_*g6_ + b2_*b3_*g3*g3_*g4_*g6_ + b1_*b2_*g6*g3_*g4_*g6_ + b3_*g3*g4*g3_*g4_*g6_ + b1_*g4*g6*g3_*g4_*g6_ + b2_*g3*g6*g3_*g4_*g6_ + g3*g4*g6*g3_*g4_*g6_ + K*b2*b1_*b3_*g4*g3_*g6_ + K2*b3*b1_*b2_*g6*g3_*g4_ + K*b2*b1_*b3_*g3_*g4_*g6_ + K2*b3*b1_*b2_*g3_*g4_*g6_ + K*b2*b3_*g3*g4*g3_*g6_ + K*b2*b1_*g4*g6*g3_*g6_ + K2*b3*b1_*g4*g6*g3_*g4_ + K2*b3*b2_*g3*g6*g3_*g4_ + P*b1*b2_*b3_*g3*g4_*g6_ + K*b2*b3_*g3*g3_*g4_*g6_ + K*b2*b1_*g6*g3_*g4_*g6_ + K2*b3*b1_*g4*g3_*g4_*g6_ + K2*b3*b2_*g3*g3_*g4_*g6_ + P*b1*b2_*b3_*g3_*g4_*g6_ + K*b2*g3*g4*g6*g3_*g6_ + K2*b3*g3*g4*g6*g3_*g4_ + P*b1*b3_*g3*g4*g4_*g6_ + P*b1*b2_*g3*g6*g4_*g6_ + K*b2*g3*g6*g3_*g4_*g6_ + K2*b3*g3*g4*g3_*g4_*g6_ + P*b1*b3_*g4*g3_*g4_*g6_ + P*b1*b2_*g6*g3_*g4_*g6_ + P*b1*g3*g4*g6*g4_*g6_ + P*b1*g4*g6*g3_*g4_*g6_)^2 - (DzT*P*a1*g1_*g2_*g5_*(a2_ + g2)*(a3_ + g5)*(a3*a1_*a2_*g5*g1_*g2_ + a3*a1_*a2_*g1_*g2_*g5_ + a3*a1_*g2*g5*g1_*g2_ + a3*a2_*g1*g5*g1_*g2_ + a3*a1_*g2*g1_*g2_*g5_ + a3*a2_*g1*g1_*g2_*g5_ + a3*g1*g2*g5*g1_*g2_ + a3*g1*g2*g1_*g2_*g5_))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_)^2;
xT*K*b2*g3_*g4_*g6_*(b1_ + g3)*(b3_ + g6)*(b1*b2_*b3_*g3*g4_*g6_ + b1*b2_*b3_*g3_*g4_*g6_ + b1*b3_*g3*g4*g4_*g6_ + b1*b2_*g3*g6*g4_*g6_ + b1*b3_*g4*g3_*g4_*g6_ + b1*b2_*g6*g3_*g4_*g6_ + b1*g3*g4*g6*g4_*g6_ + b1*g4*g6*g3_*g4_*g6_))/(b1_*b2_*b3_*g3_*g4_*g6_ + b1_*b3_*g4*g3_*g4_*g6_ + b2_*b3_*g3*g3_*g4_*g6_ + b1_*b2_*g6*g3_*g4_*g6_ + b3_*g3*g4*g3_*g4_*g6_ + b1_*g4*g6*g3_*g4_*g6_ + b2_*g3*g6*g3_*g4_*g6_ + g3*g4*g6*g3_*g4_*g6_ + K*b2*b1_*b3_*g4*g3_*g6_ + K2*b3*b1_*b2_*g6*g3_*g4_ + K*b2*b1_*b3_*g3_*g4_*g6_ + K2*b3*b1_*b2_*g3_*g4_*g6_ + K*b2*b3_*g3*g4*g3_*g6_ + K*b2*b1_*g4*g6*g3_*g6_ + K2*b3*b1_*g4*g6*g3_*g4_ + K2*b3*b2_*g3*g6*g3_*g4_ + P*b1*b2_*b3_*g3*g4_*g6_ + K*b2*b3_*g3*g3_*g4_*g6_ + K*b2*b1_*g6*g3_*g4_*g6_ + K2*b3*b1_*g4*g3_*g4_*g6_ + K2*b3*b2_*g3*g3_*g4_*g6_ + P*b1*b2_*b3_*g3_*g4_*g6_ + K*b2*g3*g4*g6*g3_*g6_ + K2*b3*g3*g4*g6*g3_*g4_ + P*b1*b3_*g3*g4*g4_*g6_ + P*b1*b2_*g3*g6*g4_*g6_ + K*b2*g3*g6*g3_*g4_*g6_ + K2*b3*g3*g4*g3_*g4_*g6_ + P*b1*b3_*g4*g3_*g4_*g6_ + P*b1*b2_*g6*g3_*g4_*g6_ + P*b1*g3*g4*g6*g4_*g6_ + P*b1*g4*g6*g3_*g4_*g6_)^2 - (DzT*K*a2*g1_*g2_*g5_*(a1_ + g1)*(a3_ + g5)*(a1*a2_*a3_*g1*g2_*g5_ + a1*a2_*a3_*g1_*g2_*g5_ + a1*a3_*g1*g2*g2_*g5_ + a1*a2_*g1*g5*g2_*g5_ + a1*a3_*g2*g1_*g2_*g5_ + a1*a2_*g5*g1_*g2_*g5_ + a1*g1*g2*g5*g2_*g5_ + a1*g2*g5*g1_*g2_*g5_))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_)^2, (DzT*a2*g1_*g2_*g5_*(a1_ + g1)*(a3_ + g5))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_) + (DxT*b2*g3_*g4_*g6_*(b1_ + g3)*(b3_ + g6))/(b1_*b2_*b3_*g3_*g4_*g6_ + b1_*b3_*g4*g3_*g4_*g6_ + b2_*b3_*g3*g3_*g4_*g6_ + b1_*b2_*g6*g3_*g4_*g6_ + b3_*g3*g4*g3_*g4_*g6_ + b1_*g4*g6*g3_*g4_*g6_ + b2_*g3*g6*g3_*g4_*g6_ + g3*g4*g6*g3_*g4_*g6_ + K*b2*b1_*b3_*g4*g3_*g6_ + K2*b3*b1_*b2_*g6*g3_*g4_ + K*b2*b1_*b3_*g3_*g4_*g6_ + K2*b3*b1_*b2_*g3_*g4_*g6_ + K*b2*b3_*g3*g4*g3_*g6_ + K*b2*b1_*g4*g6*g3_*g6_ + K2*b3*b1_*g4*g6*g3_*g4_ + K2*b3*b2_*g3*g6*g3_*g4_ + P*b1*b2_*b3_*g3*g4_*g6_ + K*b2*b3_*g3*g3_*g4_*g6_ + K*b2*b1_*g6*g3_*g4_*g6_ + K2*b3*b1_*g4*g3_*g4_*g6_ + K2*b3*b2_*g3*g3_*g4_*g6_ + P*b1*b2_*b3_*g3_*g4_*g6_ + K*b2*g3*g4*g6*g3_*g6_ + K2*b3*g3*g4*g6*g3_*g4_ + P*b1*b3_*g3*g4*g4_*g6_ + P*b1*b2_*g3*g6*g4_*g6_ + K*b2*g3*g6*g3_*g4_*g6_ + K2*b3*g3*g4*g3_*g4_*g6_ + P*b1*b3_*g4*g3_*g4_*g6_ + P*b1*b2_*g6*g3_*g4_*g6_ + P*b1*g3*g4*g6*g4_*g6_ + P*b1*g4*g6*g3_*g4_*g6_) - (DxT*K*b2*g3_*g4_*g6_*(b1_ + g3)*(b3_ + g6)*(b2*b1_*b3_*g4*g3_*g6_ + b2*b1_*b3_*g3_*g4_*g6_ + b2*b3_*g3*g4*g3_*g6_ + b2*b1_*g4*g6*g3_*g6_ + b2*b3_*g3*g3_*g4_*g6_ + b2*b1_*g6*g3_*g4_*g6_ + b2*g3*g4*g6*g3_*g6_ + b2*g3*g6*g3_*g4_*g6_))/(b1_*b2_*b3_*g3_*g4_*g6_ + b1_*b3_*g4*g3_*g4_*g6_ + b2_*b3_*g3*g3_*g4_*g6_ + b1_*b2_*g6*g3_*g4_*g6_ + b3_*g3*g4*g3_*g4_*g6_ + b1_*g4*g6*g3_*g4_*g6_ + b2_*g3*g6*g3_*g4_*g6_ + g3*g4*g6*g3_*g4_*g6_ + K*b2*b1_*b3_*g4*g3_*g6_ + K2*b3*b1_*b2_*g6*g3_*g4_ + K*b2*b1_*b3_*g3_*g4_*g6_ + K2*b3*b1_*b2_*g3_*g4_*g6_ + K*b2*b3_*g3*g4*g3_*g6_ + K*b2*b1_*g4*g6*g3_*g6_ + K2*b3*b1_*g4*g6*g3_*g4_ + K2*b3*b2_*g3*g6*g3_*g4_ + P*b1*b2_*b3_*g3*g4_*g6_ + K*b2*b3_*g3*g3_*g4_*g6_ + K*b2*b1_*g6*g3_*g4_*g6_ + K2*b3*b1_*g4*g3_*g4_*g6_ + K2*b3*b2_*g3*g3_*g4_*g6_ + P*b1*b2_*b3_*g3_*g4_*g6_ + K*b2*g3*g4*g6*g3_*g6_ + K2*b3*g3*g4*g6*g3_*g4_ + P*b1*b3_*g3*g4*g4_*g6_ + P*b1*b2_*g3*g6*g4_*g6_ + K*b2*g3*g6*g3_*g4_*g6_ + K2*b3*g3*g4*g3_*g4_*g6_ + P*b1*b3_*g4*g3_*g4_*g6_ + P*b1*b2_*g6*g3_*g4_*g6_ + P*b1*g3*g4*g6*g4_*g6_ + P*b1*g4*g6*g3_*g4_*g6_)^2 - (DzT*K*a2*g1_*g2_*g5_*(a1_ + g1)*(a3_ + g5)*(a2*a1_*a3_*g2*g1_*g5_ + a2*a1_*a3_*g1_*g2_*g5_ + a2*a3_*g1*g2*g1_*g5_ + a2*a1_*g2*g5*g1_*g5_ + a2*a3_*g1*g1_*g2_*g5_ + a2*a1_*g5*g1_*g2_*g5_ + a2*g1*g2*g5*g1_*g5_ + a2*g1*g5*g1_*g2_*g5_))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*gxT*K*b2*g3_*g4_*g6_*(b1_ + g3)*(b3_ + g6)*(b3*b1_*b2_*g6*g3_*g4_ + b3*b1_*b2_*g3_*g4_*g6_ + b3*b1_*g4*g6*g3_*g4_ + b3*b2_*g3*g6*g3_*g4_ + b3*b1_*g4*g3_*g4_*g6_ + b3*b2_*g3*g3_*g4_*g6_ + b3*g3*g4*g6*g3_*g4_ + b3*g3*g4*g3_*g4_*g6_))/(b1_*b2_*b3_*g3_*g4_*g6_ + b1_*b3_*g4*g3_*g4_*g6_ + b2_*b3_*g3*g3_*g4_*g6_ + b1_*b2_*g6*g3_*g4_*g6_ + b3_*g3*g4*g3_*g4_*g6_ + b1_*g4*g6*g3_*g4_*g6_ + b2_*g3*g6*g3_*g4_*g6_ + g3*g4*g6*g3_*g4_*g6_ + K*b2*b1_*b3_*g4*g3_*g6_ + K2*b3*b1_*b2_*g6*g3_*g4_ + K*b2*b1_*b3_*g3_*g4_*g6_ + K2*b3*b1_*b2_*g3_*g4_*g6_ + K*b2*b3_*g3*g4*g3_*g6_ + K*b2*b1_*g4*g6*g3_*g6_ + K2*b3*b1_*g4*g6*g3_*g4_ + K2*b3*b2_*g3*g6*g3_*g4_ + P*b1*b2_*b3_*g3*g4_*g6_ + K*b2*b3_*g3*g3_*g4_*g6_ + K*b2*b1_*g6*g3_*g4_*g6_ + K2*b3*b1_*g4*g3_*g4_*g6_ + K2*b3*b2_*g3*g3_*g4_*g6_ + P*b1*b2_*b3_*g3_*g4_*g6_ + K*b2*g3*g4*g6*g3_*g6_ + K2*b3*g3*g4*g6*g3_*g4_ + P*b1*b3_*g3*g4*g4_*g6_ + P*b1*b2_*g3*g6*g4_*g6_ + K*b2*g3*g6*g3_*g4_*g6_ + K2*b3*g3*g4*g3_*g4_*g6_ + P*b1*b3_*g4*g3_*g4_*g6_ + P*b1*b2_*g6*g3_*g4_*g6_ + P*b1*g3*g4*g6*g4_*g6_ + P*b1*g4*g6*g3_*g4_*g6_)^2 - (DzT*K*a2*g1_*g2_*g5_*(a1_ + g1)*(a3_ + g5)*(a3*a1_*a2_*g5*g1_*g2_ + a3*a1_*a2_*g1_*g2_*g5_ + a3*a1_*g2*g5*g1_*g2_ + a3*a2_*g1*g5*g1_*g2_ + a3*a1_*g2*g1_*g2_*g5_ + a3*a2_*g1*g1_*g2_*g5_ + a3*g1*g2*g5*g1_*g2_ + a3*g1*g2*g1_*g2_*g5_))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_)^2;
xT*K2*b3*g3_*g4_*g6_*(b1_ + g3)*(b2_ + g4)*(b1*b2_*b3_*g3*g4_*g6_ + b1*b2_*b3_*g3_*g4_*g6_ + b1*b3_*g3*g4*g4_*g6_ + b1*b2_*g3*g6*g4_*g6_ + b1*b3_*g4*g3_*g4_*g6_ + b1*b2_*g6*g3_*g4_*g6_ + b1*g3*g4*g6*g4_*g6_ + b1*g4*g6*g3_*g4_*g6_))/(b1_*b2_*b3_*g3_*g4_*g6_ + b1_*b3_*g4*g3_*g4_*g6_ + b2_*b3_*g3*g3_*g4_*g6_ + b1_*b2_*g6*g3_*g4_*g6_ + b3_*g3*g4*g3_*g4_*g6_ + b1_*g4*g6*g3_*g4_*g6_ + b2_*g3*g6*g3_*g4_*g6_ + g3*g4*g6*g3_*g4_*g6_ + K*b2*b1_*b3_*g4*g3_*g6_ + K2*b3*b1_*b2_*g6*g3_*g4_ + K*b2*b1_*b3_*g3_*g4_*g6_ + K2*b3*b1_*b2_*g3_*g4_*g6_ + K*b2*b3_*g3*g4*g3_*g6_ + K*b2*b1_*g4*g6*g3_*g6_ + K2*b3*b1_*g4*g6*g3_*g4_ + K2*b3*b2_*g3*g6*g3_*g4_ + P*b1*b2_*b3_*g3*g4_*g6_ + K*b2*b3_*g3*g3_*g4_*g6_ + K*b2*b1_*g6*g3_*g4_*g6_ + K2*b3*b1_*g4*g3_*g4_*g6_ + K2*b3*b2_*g3*g3_*g4_*g6_ + P*b1*b2_*b3_*g3_*g4_*g6_ + K*b2*g3*g4*g6*g3_*g6_ + K2*b3*g3*g4*g6*g3_*g4_ + P*b1*b3_*g3*g4*g4_*g6_ + P*b1*b2_*g3*g6*g4_*g6_ + K*b2*g3*g6*g3_*g4_*g6_ + K2*b3*g3*g4*g3_*g4_*g6_ + P*b1*b3_*g4*g3_*g4_*g6_ + P*b1*b2_*g6*g3_*g4_*g6_ + P*b1*g3*g4*g6*g4_*g6_ + P*b1*g4*g6*g3_*g4_*g6_)^2 - (DzT*K2*a3*g1_*g2_*g5_*(a1_ + g1)*(a2_ + g2)*(a1*a2_*a3_*g1*g2_*g5_ + a1*a2_*a3_*g1_*g2_*g5_ + a1*a3_*g1*g2*g2_*g5_ + a1*a2_*g1*g5*g2_*g5_ + a1*a3_*g2*g1_*g2_*g5_ + a1*a2_*g5*g1_*g2_*g5_ + a1*g1*g2*g5*g2_*g5_ + a1*g2*g5*g1_*g2_*g5_))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*gxT*K2*b3*g3_*g4_*g6_*(b1_ + g3)*(b2_ + g4)*(b2*b1_*b3_*g4*g3_*g6_ + b2*b1_*b3_*g3_*g4_*g6_ + b2*b3_*g3*g4*g3_*g6_ + b2*b1_*g4*g6*g3_*g6_ + b2*b3_*g3*g3_*g4_*g6_ + b2*b1_*g6*g3_*g4_*g6_ + b2*g3*g4*g6*g3_*g6_ + b2*g3*g6*g3_*g4_*g6_))/(b1_*b2_*b3_*g3_*g4_*g6_ + b1_*b3_*g4*g3_*g4_*g6_ + b2_*b3_*g3*g3_*g4_*g6_ + b1_*b2_*g6*g3_*g4_*g6_ + b3_*g3*g4*g3_*g4_*g6_ + b1_*g4*g6*g3_*g4_*g6_ + b2_*g3*g6*g3_*g4_*g6_ + g3*g4*g6*g3_*g4_*g6_ + K*b2*b1_*b3_*g4*g3_*g6_ + K2*b3*b1_*b2_*g6*g3_*g4_ + K*b2*b1_*b3_*g3_*g4_*g6_ + K2*b3*b1_*b2_*g3_*g4_*g6_ + K*b2*b3_*g3*g4*g3_*g6_ + K*b2*b1_*g4*g6*g3_*g6_ + K2*b3*b1_*g4*g6*g3_*g4_ + K2*b3*b2_*g3*g6*g3_*g4_ + P*b1*b2_*b3_*g3*g4_*g6_ + K*b2*b3_*g3*g3_*g4_*g6_ + K*b2*b1_*g6*g3_*g4_*g6_ + K2*b3*b1_*g4*g3_*g4_*g6_ + K2*b3*b2_*g3*g3_*g4_*g6_ + P*b1*b2_*b3_*g3_*g4_*g6_ + K*b2*g3*g4*g6*g3_*g6_ + K2*b3*g3*g4*g6*g3_*g4_ + P*b1*b3_*g3*g4*g4_*g6_ + P*b1*b2_*g3*g6*g4_*g6_ + K*b2*g3*g6*g3_*g4_*g6_ + K2*b3*g3*g4*g3_*g4_*g6_ + P*b1*b3_*g4*g3_*g4_*g6_ + P*b1*b2_*g6*g3_*g4_*g6_ + P*b1*g3*g4*g6*g4_*g6_ + P*b1*g4*g6*g3_*g4_*g6_)^2 - (DzT*K2*a3*g1_*g2_*g5_*(a1_ + g1)*(a2_ + g2)*(a2*a1_*a3_*g2*g1_*g5_ + a2*a1_*a3_*g1_*g2_*g5_ + a2*a3_*g1*g2*g1_*g5_ + a2*a1_*g2*g5*g1_*g5_ + a2*a3_*g1*g1_*g2_*g5_ + a2*a1_*g5*g1_*g2_*g5_ + a2*g1*g2*g5*g1_*g5_ + a2*g1*g5*g1_*g2_*g5_))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_)^2, (DzT*a3*g1_*g2_*g5_*(a1_ + g1)*(a2_ + g2))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_) + (DxT*b3*g3_*g4_*g6_*(b1_ + g3)*(b2_ + g4))/(b1_*b2_*b3_*g3_*g4_*g6_ + b1_*b3_*g4*g3_*g4_*g6_ + b2_*b3_*g3*g3_*g4_*g6_ + b1_*b2_*g6*g3_*g4_*g6_ + b3_*g3*g4*g3_*g4_*g6_ + b1_*g4*g6*g3_*g4_*g6_ + b2_*g3*g6*g3_*g4_*g6_ + g3*g4*g6*g3_*g4_*g6_ + K*b2*b1_*b3_*g4*g3_*g6_ + K2*b3*b1_*b2_*g6*g3_*g4_ + K*b2*b1_*b3_*g3_*g4_*g6_ + K2*b3*b1_*b2_*g3_*g4_*g6_ + K*b2*b3_*g3*g4*g3_*g6_ + K*b2*b1_*g4*g6*g3_*g6_ + K2*b3*b1_*g4*g6*g3_*g4_ + K2*b3*b2_*g3*g6*g3_*g4_ + P*b1*b2_*b3_*g3*g4_*g6_ + K*b2*b3_*g3*g3_*g4_*g6_ + K*b2*b1_*g6*g3_*g4_*g6_ + K2*b3*b1_*g4*g3_*g4_*g6_ + K2*b3*b2_*g3*g3_*g4_*g6_ + P*b1*b2_*b3_*g3_*g4_*g6_ + K*b2*g3*g4*g6*g3_*g6_ + K2*b3*g3*g4*g6*g3_*g4_ + P*b1*b3_*g3*g4*g4_*g6_ + P*b1*b2_*g3*g6*g4_*g6_ + K*b2*g3*g6*g3_*g4_*g6_ + K2*b3*g3*g4*g3_*g4_*g6_ + P*b1*b3_*g4*g3_*g4_*g6_ + P*b1*b2_*g6*g3_*g4_*g6_ + P*b1*g3*g4*g6*g4_*g6_ + P*b1*g4*g6*g3_*g4_*g6_) - (DxT*K2*b3*g3_*g4_*g6_*(b1_ + g3)*(b2_ + g4)*(b3*b1_*b2_*g6*g3_*g4_ + b3*b1_*b2_*g3_*g4_*g6_ + b3*b1_*g4*g6*g3_*g4_ + b3*b2_*g3*g6*g3_*g4_ + b3*b1_*g4*g3_*g4_*g6_ + b3*b2_*g3*g3_*g4_*g6_ + b3*g3*g4*g6*g3_*g4_ + b3*g3*g4*g3_*g4_*g6_))/(b1_*b2_*b3_*g3_*g4_*g6_ + b1_*b3_*g4*g3_*g4_*g6_ + b2_*b3_*g3*g3_*g4_*g6_ + b1_*b2_*g6*g3_*g4_*g6_ + b3_*g3*g4*g3_*g4_*g6_ + b1_*g4*g6*g3_*g4_*g6_ + b2_*g3*g6*g3_*g4_*g6_ + g3*g4*g6*g3_*g4_*g6_ + K*b2*b1_*b3_*g4*g3_*g6_ + K2*b3*b1_*b2_*g6*g3_*g4_ + K*b2*b1_*b3_*g3_*g4_*g6_ + K2*b3*b1_*b2_*g3_*g4_*g6_ + K*b2*b3_*g3*g4*g3_*g6_ + K*b2*b1_*g4*g6*g3_*g6_ + K2*b3*b1_*g4*g6*g3_*g4_ + K2*b3*b2_*g3*g6*g3_*g4_ + P*b1*b2_*b3_*g3*g4_*g6_ + K*b2*b3_*g3*g3_*g4_*g6_ + K*b2*b1_*g6*g3_*g4_*g6_ + K2*b3*b1_*g4*g3_*g4_*g6_ + K2*b3*b2_*g3*g3_*g4_*g6_ + P*b1*b2_*b3_*g3_*g4_*g6_ + K*b2*g3*g4*g6*g3_*g6_ + K2*b3*g3*g4*g6*g3_*g4_ + P*b1*b3_*g3*g4*g4_*g6_ + P*b1*b2_*g3*g6*g4_*g6_ + K*b2*g3*g6*g3_*g4_*g6_ + K2*b3*g3*g4*g3_*g4_*g6_ + P*b1*b3_*g4*g3_*g4_*g6_ + P*b1*b2_*g6*g3_*g4_*g6_ + P*b1*g3*g4*g6*g4_*g6_ + P*b1*g4*g6*g3_*g4_*g6_)^2 - (DzT*K2*a3*g1_*g2_*g5_*(a1_ + g1)*(a2_ + g2)*(a3*a1_*a2_*g5*g1_*g2_ + a3*a1_*a2_*g1_*g2_*g5_ + a3*a1_*g2*g5*g1_*g2_ + a3*a2_*g1*g5*g1_*g2_ + a3*a1_*g2*g1_*g2_*g5_ + a3*a2_*g1*g1_*g2_*g5_ + a3*g1*g2*g5*g1_*g2_ + a3*g1*g2*g1_*g2_*g5_))/(a1_*a2_*a3_*g1_*g2_*g5_ + a1_*a3_*g2*g1_*g2_*g5_ + a2_*a3_*g1*g1_*g2_*g5_ + a1_*a2_*g5*g1_*g2_*g5_ + a3_*g1*g2*g1_*g2_*g5_ + a1_*g2*g5*g1_*g2_*g5_ + a2_*g1*g5*g1_*g2_*g5_ + g1*g2*g5*g1_*g2_*g5_ + K*a2*a1_*a3_*g2*g1_*g5_ + K2*a3*a1_*a2_*g5*g1_*g2_ + K*a2*a1_*a3_*g1_*g2_*g5_ + K2*a3*a1_*a2_*g1_*g2_*g5_ + P*a1*a2_*a3_*g1*g2_*g5_ + P*a1*a2_*a3_*g1_*g2_*g5_ + K*a2*a3_*g1*g2*g1_*g5_ + K*a2*a1_*g2*g5*g1_*g5_ + K2*a3*a1_*g2*g5*g1_*g2_ + K2*a3*a2_*g1*g5*g1_*g2_ + K*a2*a3_*g1*g1_*g2_*g5_ + K*a2*a1_*g5*g1_*g2_*g5_ + K2*a3*a1_*g2*g1_*g2_*g5_ + K2*a3*a2_*g1*g1_*g2_*g5_ + P*a1*a3_*g1*g2*g2_*g5_ + P*a1*a2_*g1*g5*g2_*g5_ + P*a1*a3_*g2*g1_*g2_*g5_ + P*a1*a2_*g5*g1_*g2_*g5_ + K*a2*g1*g2*g5*g1_*g5_ + K2*a3*g1*g2*g5*g1_*g2_ + K*a2*g1*g5*g1_*g2_*g5_ + K2*a3*g1*g2*g1_*g2_*g5_ + P*a1*g1*g2*g5*g2_*g5_ + P*a1*g2*g5*g1_*g2_*g5_)^2 + 1];


 

 
Y0=[PT;KT;K2T];
ii=1;
Y=[0;0;0];
  while(norm(double(F0(Y(1),Y(2),Y(3))),Inf)>1e-5)
    if(ii~=1)
        Y0=Y;
    end
 
 Y=Y0-inv(dF0(Y0(1),Y0(2),Y0(3)))*F0(Y0(1),Y0(2),Y0(3));

 vv=find(Y<0);
 for jjj=1:length(vv)
     Y(vv(jjj))=0+1e-4*rand;
 end
     


ii=ii+1;
if(ii>50)
  %  display('Failure');
success=0;
    break;
end
  end

  P=Y(1);
K=Y(2);
K2=Y(3) ;  
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  if(success==0)
 

 
 
  
 %the following expressions are generated using
 %compute_symbolic_ode_for_fig8.m
PdotNUM=@(P,K,K2)  2*PT - 2*P - 2*P^2*a0P - 4*P^2*a1P - 2*DxT*P*a0P - 2*DzT*P*a1P - 4*K*P*a1P - 4*K2*P*a1P - 2*K*P*a0T - 2*K2*P*a0T2 + 4*K2T*P*a1P + 4*KT*P*a1P + 2*K*PT*a0T + 2*K2*PT*a0T2 + 2*P*PT*a0P + 4*P*PT*a1P - 4*P^3*a0P*a1P - 4*DxT*P^2*a0P*a1P - 2*DzT*P^2*a0P*a1P - 4*K*P^2*a0P*a1P - 4*K2*P^2*a0P*a1P - 4*K*P^2*a1P*a0T - 4*K^2*P*a1P*a0T - 4*K2*P^2*a1P*a0T2 - 4*K2^2*P*a1P*a0T2 + 4*K2T*P^2*a0P*a1P + 4*KT*P^2*a0P*a1P + 4*P^2*PT*a0P*a1P - 4*DxT*K*P*a1P*a0T - 4*DxT*K2*P*a1P*a0T2 - 2*DzT*K*P*a1P*a0T - 2*DzT*K2*P*a1P*a0T2 - 4*K*K2*P*a1P*a0T - 4*K*K2*P*a1P*a0T2 + 4*K*K2T*P*a1P*a0T + 4*K2*K2T*P*a1P*a0T2 + 4*K*KT*P*a1P*a0T + 4*K2*KT*P*a1P*a0T2 + 4*K*P*PT*a1P*a0T + 4*K2*P*PT*a1P*a0T2;







KdotNUM=@(P,K,K2) 2*KT - 2*K - 2*K^2*a0T - 4*K^2*a1T - 2*DxT*K*a0T - 2*DzT*K*a1T - 4*K*K2*a1T - 2*K*K2*a0T2 + 4*K*K2T*a1T + 2*K*KT*a0T + 4*K*KT*a1T + 2*K2*KT*a0T2 - 2*K*P*a0P - 4*K*P*a1T + 2*KT*P*a0P + 4*K*PT*a1T - 4*K^3*a0T*a1T - 4*DxT*K^2*a0T*a1T - 2*DzT*K^2*a0T*a1T - 4*K^2*K2*a0T*a1T - 4*K*K2^2*a1T*a0T2 - 4*K^2*K2*a1T*a0T2 + 4*K^2*K2T*a0T*a1T + 4*K^2*KT*a0T*a1T - 4*K*P^2*a0P*a1T - 4*K^2*P*a0P*a1T - 4*K^2*P*a0T*a1T + 4*K^2*PT*a0T*a1T - 4*DxT*K*P*a0P*a1T - 2*DzT*K*P*a0P*a1T + 4*K*K2*K2T*a1T*a0T2 + 4*K*K2*KT*a1T*a0T2 - 4*K*K2*P*a0P*a1T - 4*K*K2*P*a1T*a0T2 + 4*K*K2T*P*a0P*a1T + 4*K*KT*P*a0P*a1T + 4*K*K2*PT*a1T*a0T2 + 4*K*P*PT*a0P*a1T - 4*DxT*K*K2*a1T*a0T2 - 2*DzT*K*K2*a1T*a0T2;




K2dotNUM=@(P,K,K2) 2*K2T - 2*K2 - 2*K2^2*a0T2 - 4*K2^2*a1T2 - 2*DxT*K2*a0T2 - 2*DzT*K2*a1T2 - 2*K*K2*a0T - 4*K*K2*a1T2 + 2*K*K2T*a0T + 2*K2*K2T*a0T2 + 4*K2*K2T*a1T2 + 4*K2*KT*a1T2 - 2*K2*P*a0P - 4*K2*P*a1T2 + 2*K2T*P*a0P + 4*K2*PT*a1T2 - 4*K2^3*a0T2*a1T2 - 4*DxT*K2^2*a0T2*a1T2 - 2*DzT*K2^2*a0T2*a1T2 - 4*K*K2^2*a0T*a1T2 - 4*K^2*K2*a0T*a1T2 - 4*K*K2^2*a0T2*a1T2 + 4*K2^2*K2T*a0T2*a1T2 + 4*K2^2*KT*a0T2*a1T2 - 4*K2*P^2*a0P*a1T2 - 4*K2^2*P*a0P*a1T2 - 4*K2^2*P*a0T2*a1T2 + 4*K2^2*PT*a0T2*a1T2 - 4*DxT*K2*P*a0P*a1T2 - 2*DzT*K2*P*a0P*a1T2 + 4*K*K2*K2T*a0T*a1T2 + 4*K*K2*KT*a0T*a1T2 - 4*K*K2*P*a0P*a1T2 - 4*K*K2*P*a0T*a1T2 + 4*K2*K2T*P*a0P*a1T2 + 4*K2*KT*P*a0P*a1T2 + 4*K*K2*PT*a0T*a1T2 + 4*K2*P*PT*a0P*a1T2 - 4*DxT*K*K2*a0T*a1T2 - 2*DzT*K*K2*a0T*a1T2;




DEN=@(P,K,K2)  K*a0T + K2*a0T2 + P*a0P + 1;

 
Pdot= @(P,K,K2) PdotNUM(P,K,K2)/DEN(P,K,K2);


 
Kdot= @(P,K,K2) KdotNUM(P,K,K2)/DEN(P,K,K2);
K2dot= @(P,K,K2) K2dotNUM(P,K,K2)/DEN(P,K,K2);


 


 

ODE=@(t,x) [ Pdot(x(1),x(2),x(3)); Kdot(x(1),x(2),x(3)); K2dot(x(1),x(2),x(3))];
 
 
th=1;kk=0;Tm=1000;
         while(th>0.01 && kk<2)
[t,Y]=ode23s(ODE,[0 Tm+7000*kk],[PT,KT,K2T]);
th=norm(Y(end,:)-Y(end-1,:));
kk=kk+1 ;
         end
   
   
      P=Y(end,1);
K=Y(end,2);
K2=Y(end,3);
if(th>0.05)
    
    disp('fail')
      fail=fail+1;
        P=NaN;
K=NaN;
K2=NaN;
end
 




  end
%i
   ;       
EEv(i)=Dz1(P,K,K2)+Dz2(P,K,K2)+Czk(P,K,K2)+Czk2(P,K,K2)+rho*Dz(P,K,K2);
         
end
EE(l+1,:)=EEv;
 

end
toc
parfor l=0:L^MM-1;
 ql=flip(dec2base(l,L,MM)-48);
ql(find(ql>16))=ql(find(ql>16))-7;

 a0P =  sum(v.*(ql(1)==[0:L-1])); 4.2795e+03;
a0T =   sum(v.*(ql(2)==[0:L-1]));; 4.9988e+03;
a0T2 =    sum(v.*(ql(3)==[0:L-1]));; 0.5587;
 g0P =sum(v.*(ql(4)==[0:L-1]));1.7986e-04;
% 
   g0T =   sum(v.*(ql(5)==[0:L-1]));
   g0T2 =  sum(v.*(ql(6)==[0:L-1]));



if(EE(l+1,1)>1.5001*EE(l+1,2) && EE(l+1,2)>1.5001*EE(l+1,3))
%P123=[P123;EE(l+1,:)];
%q123=[q123;in(l+1,:)];

a0P123=[a0P123 a0P];
g0P123=[g0P123 g0P];

a0T123=[a0T123 a0T];
g0T123=[g0T123 g0T];

a0T2123=[a0T2123 a0T2];
g0T2123=[g0T2123 g0T2];

EE123=[EE123 ;EE(l+1,:)];
elseif(EE(l+1,1)>1.5001*EE(l+1,3) && EE(l+1,3)>1.5001*EE(l+1,2))
%P132=[P132;EE(l+1,:)];
%q132=[q132;in(l+1,:)];
 

a0P132=[a0P132 a0P];
g0P132=[g0P132 g0P];

a0T132=[a0T132 a0T];
g0T132=[g0T132 g0T];

a0T2132=[a0T2132 a0T2];
g0T2132=[g0T2132 g0T2];
EE132=[EE132 ;EE(l+1,:)];


elseif(EE(l+1,2)>3.0001*EE(l+1,3) && EE(l+1,3)>3.0001*EE(l+1,1))
%P231=[P231;EE(l+1,:)];
%q231=[q231;in(l+1,:)];

 

a0P231=[a0P231 a0P];
g0P231=[g0P231 g0P];

a0T231=[a0T231 a0T];
g0T231=[g0T231 g0T];

a0T2231=[a0T2231 a0T2];
g0T2231=[g0T2231 g0T2];
EE231=[EE231 ;EE(l+1,:)];


elseif(EE(l+1,2)>3.0001*EE(l+1,1) && EE(l+1,1)>3.0001*EE(l+1,3))
%P213=[P213;EE(l+1,:)];
%q213=[q213;in(l+1,:)];

 

a0P213=[a0P213 a0P];
g0P213=[g0P213 g0P];

a0T213=[a0T213 a0T];
g0T213=[g0T213 g0T];

a0T2213=[a0T2213 a0T2];
g0T2213=[g0T2213 g0T2];
EE213=[EE213 ;EE(l+1,:)];


elseif(EE(l+1,3)>3.0001*EE(l+1,1) && EE(l+1,1)>3.0001*EE(l+1,2))
 

 
a0P312=[a0P312 a0P];
g0P312=[g0P312 g0P];

a0T312=[a0T312 a0T];
g0T312=[g0T312 g0T];

a0T2312=[a0T2312 a0T2];
g0T2312=[g0T2312 g0T2];

EE312=[EE312 ;EE(l+1,:)];


elseif(EE(l+1,3)>3.0001*EE(l+1,2) && EE(l+1,2)>3.0001*EE(l+1,1))
 

 

a0P321=[a0P321 a0P];
g0P321=[g0P321 g0P];

a0T321=[a0T321 a0T];
g0T321=[g0T321 g0T];

a0T2321=[a0T2321 a0T2];
g0T2321=[g0T2321 g0T2];
EE321=[EE321 ;EE(l+1,:)];

end


end

 
disp('done')






 
  
  
  plot_parameter_histograms